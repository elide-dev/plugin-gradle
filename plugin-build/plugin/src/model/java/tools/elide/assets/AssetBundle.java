// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elide/assets/bundle.proto

package tools.elide.assets;

/**
 * <pre>
 * Defines the structure of an "asset bundle," which keeps track of frontend assets for an application. This manifest is
 * generally consumed in binary-proto form by the backend systems running the app, so it can load frontend code and map
 * module paths to annotations affixed to controllers.
 * Assets enclosed in the asset manifest are referenced by their "module name," which is a dotted string path uniquely
 * scoping a given stylesheet or script. The set of sources associated with the module name are loaded in order, with
 * any applicable rewrite maps or other settings applying during output.
 * </pre>
 *
 * Protobuf type {@code assets.AssetBundle}
 */
public final class AssetBundle extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:assets.AssetBundle)
    AssetBundleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AssetBundle.newBuilder() to construct.
  private AssetBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AssetBundle() {
    digest_ = com.google.protobuf.ByteString.EMPTY;
    asset_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AssetBundle();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AssetBundle(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            version_ = input.readUInt32();
            break;
          }
          case 18: {
            tools.elide.assets.AssetBundle.BundlerSettings.Builder subBuilder = null;
            if (settings_ != null) {
              subBuilder = settings_.toBuilder();
            }
            settings_ = input.readMessage(tools.elide.assets.AssetBundle.BundlerSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(settings_);
              settings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (generated_ != null) {
              subBuilder = generated_.toBuilder();
            }
            generated_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(generated_);
              generated_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {

            digest_ = input.readBytes();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              styles_ = com.google.protobuf.MapField.newMapField(
                  StylesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
            styles__ = input.readMessage(
                StylesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            styles_.getMutableMap().put(
                styles__.getKey(), styles__.getValue());
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              scripts_ = com.google.protobuf.MapField.newMapField(
                  ScriptsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
            scripts__ = input.readMessage(
                ScriptsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            scripts_.getMutableMap().put(
                scripts__.getKey(), scripts__.getValue());
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              generic_ = com.google.protobuf.MapField.newMapField(
                  GenericDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
            generic__ = input.readMessage(
                GenericDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            generic_.getMutableMap().put(
                generic__.getKey(), generic__.getValue());
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.AssetContent>();
              mutable_bitField0_ |= 0x00000008;
            }
            asset_.add(
                input.readMessage(tools.elide.assets.AssetBundle.AssetContent.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        asset_ = java.util.Collections.unmodifiableList(asset_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetStyles();
      case 6:
        return internalGetScripts();
      case 7:
        return internalGetGeneric();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            tools.elide.assets.AssetBundle.class, tools.elide.assets.AssetBundle.Builder.class);
  }

  public interface DigestSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.DigestSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Hash algorithm in use for asset digestion.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm algorithm = 1;</code>
     * @return The enum numeric value on the wire for algorithm.
     */
    int getAlgorithmValue();
    /**
     * <pre>
     * Hash algorithm in use for asset digestion.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm algorithm = 1;</code>
     * @return The algorithm.
     */
    tools.elide.crypto.HashAlgorithm getAlgorithm();

    /**
     * <pre>
     * Number of characters to pluck from the tail of the hash.
     * </pre>
     *
     * <code>uint32 tail = 2;</code>
     * @return The tail.
     */
    int getTail();

    /**
     * <pre>
     * Number of rounds to perform. Defaults to `1`.
     * </pre>
     *
     * <code>uint32 rounds = 3;</code>
     * @return The rounds.
     */
    int getRounds();
  }
  /**
   * <pre>
   * Specifies settings related to cryptographic asset digestion. This includes the algorithm in use, and the length of
   * the hash to take for the resulting token.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.DigestSettings}
   */
  public static final class DigestSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.DigestSettings)
      DigestSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DigestSettings.newBuilder() to construct.
    private DigestSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DigestSettings() {
      algorithm_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DigestSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DigestSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              algorithm_ = rawValue;
              break;
            }
            case 16: {

              tail_ = input.readUInt32();
              break;
            }
            case 24: {

              rounds_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_DigestSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_DigestSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.DigestSettings.class, tools.elide.assets.AssetBundle.DigestSettings.Builder.class);
    }

    public static final int ALGORITHM_FIELD_NUMBER = 1;
    private int algorithm_;
    /**
     * <pre>
     * Hash algorithm in use for asset digestion.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm algorithm = 1;</code>
     * @return The enum numeric value on the wire for algorithm.
     */
    @java.lang.Override public int getAlgorithmValue() {
      return algorithm_;
    }
    /**
     * <pre>
     * Hash algorithm in use for asset digestion.
     * </pre>
     *
     * <code>.crypto.HashAlgorithm algorithm = 1;</code>
     * @return The algorithm.
     */
    @java.lang.Override public tools.elide.crypto.HashAlgorithm getAlgorithm() {
      @SuppressWarnings("deprecation")
      tools.elide.crypto.HashAlgorithm result = tools.elide.crypto.HashAlgorithm.valueOf(algorithm_);
      return result == null ? tools.elide.crypto.HashAlgorithm.UNRECOGNIZED : result;
    }

    public static final int TAIL_FIELD_NUMBER = 2;
    private int tail_;
    /**
     * <pre>
     * Number of characters to pluck from the tail of the hash.
     * </pre>
     *
     * <code>uint32 tail = 2;</code>
     * @return The tail.
     */
    @java.lang.Override
    public int getTail() {
      return tail_;
    }

    public static final int ROUNDS_FIELD_NUMBER = 3;
    private int rounds_;
    /**
     * <pre>
     * Number of rounds to perform. Defaults to `1`.
     * </pre>
     *
     * <code>uint32 rounds = 3;</code>
     * @return The rounds.
     */
    @java.lang.Override
    public int getRounds() {
      return rounds_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (algorithm_ != tools.elide.crypto.HashAlgorithm.IDENTITY.getNumber()) {
        output.writeEnum(1, algorithm_);
      }
      if (tail_ != 0) {
        output.writeUInt32(2, tail_);
      }
      if (rounds_ != 0) {
        output.writeUInt32(3, rounds_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (algorithm_ != tools.elide.crypto.HashAlgorithm.IDENTITY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, algorithm_);
      }
      if (tail_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tail_);
      }
      if (rounds_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rounds_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.DigestSettings)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.DigestSettings other = (tools.elide.assets.AssetBundle.DigestSettings) obj;

      if (algorithm_ != other.algorithm_) return false;
      if (getTail()
          != other.getTail()) return false;
      if (getRounds()
          != other.getRounds()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + algorithm_;
      hash = (37 * hash) + TAIL_FIELD_NUMBER;
      hash = (53 * hash) + getTail();
      hash = (37 * hash) + ROUNDS_FIELD_NUMBER;
      hash = (53 * hash) + getRounds();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.DigestSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.DigestSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies settings related to cryptographic asset digestion. This includes the algorithm in use, and the length of
     * the hash to take for the resulting token.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.DigestSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.DigestSettings)
        tools.elide.assets.AssetBundle.DigestSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_DigestSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_DigestSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.DigestSettings.class, tools.elide.assets.AssetBundle.DigestSettings.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.DigestSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        algorithm_ = 0;

        tail_ = 0;

        rounds_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_DigestSettings_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.DigestSettings getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.DigestSettings.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.DigestSettings build() {
        tools.elide.assets.AssetBundle.DigestSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.DigestSettings buildPartial() {
        tools.elide.assets.AssetBundle.DigestSettings result = new tools.elide.assets.AssetBundle.DigestSettings(this);
        result.algorithm_ = algorithm_;
        result.tail_ = tail_;
        result.rounds_ = rounds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.DigestSettings) {
          return mergeFrom((tools.elide.assets.AssetBundle.DigestSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.DigestSettings other) {
        if (other == tools.elide.assets.AssetBundle.DigestSettings.getDefaultInstance()) return this;
        if (other.algorithm_ != 0) {
          setAlgorithmValue(other.getAlgorithmValue());
        }
        if (other.getTail() != 0) {
          setTail(other.getTail());
        }
        if (other.getRounds() != 0) {
          setRounds(other.getRounds());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.DigestSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.DigestSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int algorithm_ = 0;
      /**
       * <pre>
       * Hash algorithm in use for asset digestion.
       * </pre>
       *
       * <code>.crypto.HashAlgorithm algorithm = 1;</code>
       * @return The enum numeric value on the wire for algorithm.
       */
      @java.lang.Override public int getAlgorithmValue() {
        return algorithm_;
      }
      /**
       * <pre>
       * Hash algorithm in use for asset digestion.
       * </pre>
       *
       * <code>.crypto.HashAlgorithm algorithm = 1;</code>
       * @param value The enum numeric value on the wire for algorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithmValue(int value) {
        
        algorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash algorithm in use for asset digestion.
       * </pre>
       *
       * <code>.crypto.HashAlgorithm algorithm = 1;</code>
       * @return The algorithm.
       */
      @java.lang.Override
      public tools.elide.crypto.HashAlgorithm getAlgorithm() {
        @SuppressWarnings("deprecation")
        tools.elide.crypto.HashAlgorithm result = tools.elide.crypto.HashAlgorithm.valueOf(algorithm_);
        return result == null ? tools.elide.crypto.HashAlgorithm.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Hash algorithm in use for asset digestion.
       * </pre>
       *
       * <code>.crypto.HashAlgorithm algorithm = 1;</code>
       * @param value The algorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithm(tools.elide.crypto.HashAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        algorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash algorithm in use for asset digestion.
       * </pre>
       *
       * <code>.crypto.HashAlgorithm algorithm = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlgorithm() {
        
        algorithm_ = 0;
        onChanged();
        return this;
      }

      private int tail_ ;
      /**
       * <pre>
       * Number of characters to pluck from the tail of the hash.
       * </pre>
       *
       * <code>uint32 tail = 2;</code>
       * @return The tail.
       */
      @java.lang.Override
      public int getTail() {
        return tail_;
      }
      /**
       * <pre>
       * Number of characters to pluck from the tail of the hash.
       * </pre>
       *
       * <code>uint32 tail = 2;</code>
       * @param value The tail to set.
       * @return This builder for chaining.
       */
      public Builder setTail(int value) {
        
        tail_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of characters to pluck from the tail of the hash.
       * </pre>
       *
       * <code>uint32 tail = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTail() {
        
        tail_ = 0;
        onChanged();
        return this;
      }

      private int rounds_ ;
      /**
       * <pre>
       * Number of rounds to perform. Defaults to `1`.
       * </pre>
       *
       * <code>uint32 rounds = 3;</code>
       * @return The rounds.
       */
      @java.lang.Override
      public int getRounds() {
        return rounds_;
      }
      /**
       * <pre>
       * Number of rounds to perform. Defaults to `1`.
       * </pre>
       *
       * <code>uint32 rounds = 3;</code>
       * @param value The rounds to set.
       * @return This builder for chaining.
       */
      public Builder setRounds(int value) {
        
        rounds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of rounds to perform. Defaults to `1`.
       * </pre>
       *
       * <code>uint32 rounds = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRounds() {
        
        rounds_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.DigestSettings)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.DigestSettings)
    private static final tools.elide.assets.AssetBundle.DigestSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.DigestSettings();
    }

    public static tools.elide.assets.AssetBundle.DigestSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DigestSettings>
        PARSER = new com.google.protobuf.AbstractParser<DigestSettings>() {
      @java.lang.Override
      public DigestSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DigestSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DigestSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DigestSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.DigestSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RewriteMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.RewriteMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * File this rewrite map was originally loaded from.
     * </pre>
     *
     * <code>string file = 1;</code>
     * @return The file.
     */
    java.lang.String getFile();
    /**
     * <pre>
     * File this rewrite map was originally loaded from.
     * </pre>
     *
     * <code>string file = 1;</code>
     * @return The bytes for file.
     */
    com.google.protobuf.ByteString
        getFileBytes();

    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    int getMapCount();
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    boolean containsMap(
        java.lang.String key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMap();
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapMap();
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */

    /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */

    java.lang.String getMapOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Specifies a map of style symbols (usually classes and/or IDs) that should be rewritten on the fly, and their target
   * rewrite values. If a rewrite map is present and active, it is used during serving to line styles up with the DOM.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.RewriteMap}
   */
  public static final class RewriteMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.RewriteMap)
      RewriteMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RewriteMap.newBuilder() to construct.
    private RewriteMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RewriteMap() {
      file_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RewriteMap();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RewriteMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              file_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                map_ = com.google.protobuf.MapField.newMapField(
                    MapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              map__ = input.readMessage(
                  MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              map_.getMutableMap().put(
                  map__.getKey(), map__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.RewriteMap.class, tools.elide.assets.AssetBundle.RewriteMap.Builder.class);
    }

    public static final int FILE_FIELD_NUMBER = 1;
    private volatile java.lang.Object file_;
    /**
     * <pre>
     * File this rewrite map was originally loaded from.
     * </pre>
     *
     * <code>string file = 1;</code>
     * @return The file.
     */
    @java.lang.Override
    public java.lang.String getFile() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        file_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * File this rewrite map was originally loaded from.
     * </pre>
     *
     * <code>string file = 1;</code>
     * @return The bytes for file.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileBytes() {
      java.lang.Object ref = file_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        file_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAP_FIELD_NUMBER = 2;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> map_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMap() {
      if (map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapDefaultEntryHolder.defaultEntry);
      }
      return map_;
    }

    public int getMapCount() {
      return internalGetMap().getMap().size();
    }
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */

    @java.lang.Override
    public boolean containsMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMap() {
      return getMapMap();
    }
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
      return internalGetMap().getMap();
    }
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getMapOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of symbols to their rewritten values.
     * </pre>
     *
     * <code>map&lt;string, string&gt; map = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(file_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, file_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMap(),
          MapDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(file_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, file_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        map__ = MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, map__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.RewriteMap)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.RewriteMap other = (tools.elide.assets.AssetBundle.RewriteMap) obj;

      if (!getFile()
          .equals(other.getFile())) return false;
      if (!internalGetMap().equals(
          other.internalGetMap())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FILE_FIELD_NUMBER;
      hash = (53 * hash) + getFile().hashCode();
      if (!internalGetMap().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.RewriteMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.RewriteMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a map of style symbols (usually classes and/or IDs) that should be rewritten on the fly, and their target
     * rewrite values. If a rewrite map is present and active, it is used during serving to line styles up with the DOM.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.RewriteMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.RewriteMap)
        tools.elide.assets.AssetBundle.RewriteMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.RewriteMap.class, tools.elide.assets.AssetBundle.RewriteMap.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.RewriteMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        file_ = "";

        internalGetMutableMap().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_RewriteMap_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.RewriteMap getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.RewriteMap.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.RewriteMap build() {
        tools.elide.assets.AssetBundle.RewriteMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.RewriteMap buildPartial() {
        tools.elide.assets.AssetBundle.RewriteMap result = new tools.elide.assets.AssetBundle.RewriteMap(this);
        int from_bitField0_ = bitField0_;
        result.file_ = file_;
        result.map_ = internalGetMap();
        result.map_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.RewriteMap) {
          return mergeFrom((tools.elide.assets.AssetBundle.RewriteMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.RewriteMap other) {
        if (other == tools.elide.assets.AssetBundle.RewriteMap.getDefaultInstance()) return this;
        if (!other.getFile().isEmpty()) {
          file_ = other.file_;
          onChanged();
        }
        internalGetMutableMap().mergeFrom(
            other.internalGetMap());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.RewriteMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.RewriteMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object file_ = "";
      /**
       * <pre>
       * File this rewrite map was originally loaded from.
       * </pre>
       *
       * <code>string file = 1;</code>
       * @return The file.
       */
      public java.lang.String getFile() {
        java.lang.Object ref = file_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          file_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * File this rewrite map was originally loaded from.
       * </pre>
       *
       * <code>string file = 1;</code>
       * @return The bytes for file.
       */
      public com.google.protobuf.ByteString
          getFileBytes() {
        java.lang.Object ref = file_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          file_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * File this rewrite map was originally loaded from.
       * </pre>
       *
       * <code>string file = 1;</code>
       * @param value The file to set.
       * @return This builder for chaining.
       */
      public Builder setFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        file_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File this rewrite map was originally loaded from.
       * </pre>
       *
       * <code>string file = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFile() {
        
        file_ = getDefaultInstance().getFile();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File this rewrite map was originally loaded from.
       * </pre>
       *
       * <code>string file = 1;</code>
       * @param value The bytes for file to set.
       * @return This builder for chaining.
       */
      public Builder setFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        file_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> map_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMap() {
        if (map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        return map_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMap() {
        onChanged();;
        if (map_ == null) {
          map_ = com.google.protobuf.MapField.newMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        if (!map_.isMutable()) {
          map_ = map_.copy();
        }
        return map_;
      }

      public int getMapCount() {
        return internalGetMap().getMap().size();
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */

      @java.lang.Override
      public boolean containsMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMap() {
        return getMapMap();
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
        return internalGetMap().getMap();
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */
      @java.lang.Override

      public java.lang.String getMapOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */
      @java.lang.Override

      public java.lang.String getMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMap() {
        internalGetMutableMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */

      public Builder removeMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMap() {
        return internalGetMutableMap().getMutableMap();
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */
      public Builder putMap(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Map of symbols to their rewritten values.
       * </pre>
       *
       * <code>map&lt;string, string&gt; map = 2;</code>
       */

      public Builder putAllMap(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMap().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.RewriteMap)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.RewriteMap)
    private static final tools.elide.assets.AssetBundle.RewriteMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.RewriteMap();
    }

    public static tools.elide.assets.AssetBundle.RewriteMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RewriteMap>
        PARSER = new com.google.protobuf.AbstractParser<RewriteMap>() {
      @java.lang.Override
      public RewriteMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RewriteMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RewriteMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RewriteMap> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.RewriteMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BundlerSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.BundlerSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies whether minification was enabled, and/or should be enabled.
     * </pre>
     *
     * <code>bool minify = 1;</code>
     * @return The minify.
     */
    boolean getMinify();

    /**
     * <pre>
     * Specifies whether JavaScript pre-packing was enabled, and/or should be enabled.
     * </pre>
     *
     * <code>bool prepack = 2;</code>
     * @return The prepack.
     */
    boolean getPrepack();

    /**
     * <pre>
     * Specifies whether assets participating in style rewriting (not to be confused with minification).
     * </pre>
     *
     * <code>bool rewriting = 3;</code>
     * @return The rewriting.
     */
    boolean getRewriting();

    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return A list containing the compression.
     */
    java.util.List<tools.elide.data.CompressionMode> getCompressionList();
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return The count of compression.
     */
    int getCompressionCount();
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @param index The index of the element to return.
     * @return The compression at the given index.
     */
    tools.elide.data.CompressionMode getCompression(int index);
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return A list containing the enum numeric values on the wire for compression.
     */
    java.util.List<java.lang.Integer>
    getCompressionValueList();
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of compression at the given index.
     */
    int getCompressionValue(int index);

    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     * @return Whether the digestSettings field is set.
     */
    boolean hasDigestSettings();
    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     * @return The digestSettings.
     */
    tools.elide.assets.AssetBundle.DigestSettings getDigestSettings();
    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     */
    tools.elide.assets.AssetBundle.DigestSettingsOrBuilder getDigestSettingsOrBuilder();
  }
  /**
   * <pre>
   * Specifies settings which were active at the time the bundle was generated, and some of which may extend to the
   * bundle's use at runtime.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.BundlerSettings}
   */
  public static final class BundlerSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.BundlerSettings)
      BundlerSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BundlerSettings.newBuilder() to construct.
    private BundlerSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BundlerSettings() {
      compression_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BundlerSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BundlerSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              minify_ = input.readBool();
              break;
            }
            case 16: {

              prepack_ = input.readBool();
              break;
            }
            case 24: {

              rewriting_ = input.readBool();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                compression_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              compression_.add(rawValue);
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  compression_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                compression_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 42: {
              tools.elide.assets.AssetBundle.DigestSettings.Builder subBuilder = null;
              if (digestSettings_ != null) {
                subBuilder = digestSettings_.toBuilder();
              }
              digestSettings_ = input.readMessage(tools.elide.assets.AssetBundle.DigestSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(digestSettings_);
                digestSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          compression_ = java.util.Collections.unmodifiableList(compression_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_BundlerSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_BundlerSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.BundlerSettings.class, tools.elide.assets.AssetBundle.BundlerSettings.Builder.class);
    }

    public static final int MINIFY_FIELD_NUMBER = 1;
    private boolean minify_;
    /**
     * <pre>
     * Specifies whether minification was enabled, and/or should be enabled.
     * </pre>
     *
     * <code>bool minify = 1;</code>
     * @return The minify.
     */
    @java.lang.Override
    public boolean getMinify() {
      return minify_;
    }

    public static final int PREPACK_FIELD_NUMBER = 2;
    private boolean prepack_;
    /**
     * <pre>
     * Specifies whether JavaScript pre-packing was enabled, and/or should be enabled.
     * </pre>
     *
     * <code>bool prepack = 2;</code>
     * @return The prepack.
     */
    @java.lang.Override
    public boolean getPrepack() {
      return prepack_;
    }

    public static final int REWRITING_FIELD_NUMBER = 3;
    private boolean rewriting_;
    /**
     * <pre>
     * Specifies whether assets participating in style rewriting (not to be confused with minification).
     * </pre>
     *
     * <code>bool rewriting = 3;</code>
     * @return The rewriting.
     */
    @java.lang.Override
    public boolean getRewriting() {
      return rewriting_;
    }

    public static final int COMPRESSION_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> compression_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, tools.elide.data.CompressionMode> compression_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, tools.elide.data.CompressionMode>() {
              public tools.elide.data.CompressionMode convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                tools.elide.data.CompressionMode result = tools.elide.data.CompressionMode.valueOf(from);
                return result == null ? tools.elide.data.CompressionMode.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return A list containing the compression.
     */
    @java.lang.Override
    public java.util.List<tools.elide.data.CompressionMode> getCompressionList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, tools.elide.data.CompressionMode>(compression_, compression_converter_);
    }
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return The count of compression.
     */
    @java.lang.Override
    public int getCompressionCount() {
      return compression_.size();
    }
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @param index The index of the element to return.
     * @return The compression at the given index.
     */
    @java.lang.Override
    public tools.elide.data.CompressionMode getCompression(int index) {
      return compression_converter_.convert(compression_.get(index));
    }
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @return A list containing the enum numeric values on the wire for compression.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getCompressionValueList() {
      return compression_;
    }
    /**
     * <pre>
     * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
     * potentially depending on whether the compressed asset variant saved space over the wire.
     * </pre>
     *
     * <code>repeated .data.CompressionMode compression = 4;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of compression at the given index.
     */
    @java.lang.Override
    public int getCompressionValue(int index) {
      return compression_.get(index);
    }
    private int compressionMemoizedSerializedSize;

    public static final int DIGEST_SETTINGS_FIELD_NUMBER = 5;
    private tools.elide.assets.AssetBundle.DigestSettings digestSettings_;
    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     * @return Whether the digestSettings field is set.
     */
    @java.lang.Override
    public boolean hasDigestSettings() {
      return digestSettings_ != null;
    }
    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     * @return The digestSettings.
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.DigestSettings getDigestSettings() {
      return digestSettings_ == null ? tools.elide.assets.AssetBundle.DigestSettings.getDefaultInstance() : digestSettings_;
    }
    /**
     * <pre>
     * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
     * content, and are used to address assets dynamically from the server and frontend.
     * </pre>
     *
     * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.DigestSettingsOrBuilder getDigestSettingsOrBuilder() {
      return getDigestSettings();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (minify_ != false) {
        output.writeBool(1, minify_);
      }
      if (prepack_ != false) {
        output.writeBool(2, prepack_);
      }
      if (rewriting_ != false) {
        output.writeBool(3, rewriting_);
      }
      if (getCompressionList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(compressionMemoizedSerializedSize);
      }
      for (int i = 0; i < compression_.size(); i++) {
        output.writeEnumNoTag(compression_.get(i));
      }
      if (digestSettings_ != null) {
        output.writeMessage(5, getDigestSettings());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (minify_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, minify_);
      }
      if (prepack_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, prepack_);
      }
      if (rewriting_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, rewriting_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < compression_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(compression_.get(i));
        }
        size += dataSize;
        if (!getCompressionList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }compressionMemoizedSerializedSize = dataSize;
      }
      if (digestSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDigestSettings());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.BundlerSettings)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.BundlerSettings other = (tools.elide.assets.AssetBundle.BundlerSettings) obj;

      if (getMinify()
          != other.getMinify()) return false;
      if (getPrepack()
          != other.getPrepack()) return false;
      if (getRewriting()
          != other.getRewriting()) return false;
      if (!compression_.equals(other.compression_)) return false;
      if (hasDigestSettings() != other.hasDigestSettings()) return false;
      if (hasDigestSettings()) {
        if (!getDigestSettings()
            .equals(other.getDigestSettings())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MINIFY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMinify());
      hash = (37 * hash) + PREPACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPrepack());
      hash = (37 * hash) + REWRITING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRewriting());
      if (getCompressionCount() > 0) {
        hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + compression_.hashCode();
      }
      if (hasDigestSettings()) {
        hash = (37 * hash) + DIGEST_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getDigestSettings().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.BundlerSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.BundlerSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies settings which were active at the time the bundle was generated, and some of which may extend to the
     * bundle's use at runtime.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.BundlerSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.BundlerSettings)
        tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_BundlerSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_BundlerSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.BundlerSettings.class, tools.elide.assets.AssetBundle.BundlerSettings.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.BundlerSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minify_ = false;

        prepack_ = false;

        rewriting_ = false;

        compression_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (digestSettingsBuilder_ == null) {
          digestSettings_ = null;
        } else {
          digestSettings_ = null;
          digestSettingsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_BundlerSettings_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.BundlerSettings getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.BundlerSettings.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.BundlerSettings build() {
        tools.elide.assets.AssetBundle.BundlerSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.BundlerSettings buildPartial() {
        tools.elide.assets.AssetBundle.BundlerSettings result = new tools.elide.assets.AssetBundle.BundlerSettings(this);
        int from_bitField0_ = bitField0_;
        result.minify_ = minify_;
        result.prepack_ = prepack_;
        result.rewriting_ = rewriting_;
        if (((bitField0_ & 0x00000001) != 0)) {
          compression_ = java.util.Collections.unmodifiableList(compression_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.compression_ = compression_;
        if (digestSettingsBuilder_ == null) {
          result.digestSettings_ = digestSettings_;
        } else {
          result.digestSettings_ = digestSettingsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.BundlerSettings) {
          return mergeFrom((tools.elide.assets.AssetBundle.BundlerSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.BundlerSettings other) {
        if (other == tools.elide.assets.AssetBundle.BundlerSettings.getDefaultInstance()) return this;
        if (other.getMinify() != false) {
          setMinify(other.getMinify());
        }
        if (other.getPrepack() != false) {
          setPrepack(other.getPrepack());
        }
        if (other.getRewriting() != false) {
          setRewriting(other.getRewriting());
        }
        if (!other.compression_.isEmpty()) {
          if (compression_.isEmpty()) {
            compression_ = other.compression_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCompressionIsMutable();
            compression_.addAll(other.compression_);
          }
          onChanged();
        }
        if (other.hasDigestSettings()) {
          mergeDigestSettings(other.getDigestSettings());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.BundlerSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.BundlerSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean minify_ ;
      /**
       * <pre>
       * Specifies whether minification was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool minify = 1;</code>
       * @return The minify.
       */
      @java.lang.Override
      public boolean getMinify() {
        return minify_;
      }
      /**
       * <pre>
       * Specifies whether minification was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool minify = 1;</code>
       * @param value The minify to set.
       * @return This builder for chaining.
       */
      public Builder setMinify(boolean value) {
        
        minify_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether minification was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool minify = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinify() {
        
        minify_ = false;
        onChanged();
        return this;
      }

      private boolean prepack_ ;
      /**
       * <pre>
       * Specifies whether JavaScript pre-packing was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool prepack = 2;</code>
       * @return The prepack.
       */
      @java.lang.Override
      public boolean getPrepack() {
        return prepack_;
      }
      /**
       * <pre>
       * Specifies whether JavaScript pre-packing was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool prepack = 2;</code>
       * @param value The prepack to set.
       * @return This builder for chaining.
       */
      public Builder setPrepack(boolean value) {
        
        prepack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether JavaScript pre-packing was enabled, and/or should be enabled.
       * </pre>
       *
       * <code>bool prepack = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrepack() {
        
        prepack_ = false;
        onChanged();
        return this;
      }

      private boolean rewriting_ ;
      /**
       * <pre>
       * Specifies whether assets participating in style rewriting (not to be confused with minification).
       * </pre>
       *
       * <code>bool rewriting = 3;</code>
       * @return The rewriting.
       */
      @java.lang.Override
      public boolean getRewriting() {
        return rewriting_;
      }
      /**
       * <pre>
       * Specifies whether assets participating in style rewriting (not to be confused with minification).
       * </pre>
       *
       * <code>bool rewriting = 3;</code>
       * @param value The rewriting to set.
       * @return This builder for chaining.
       */
      public Builder setRewriting(boolean value) {
        
        rewriting_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether assets participating in style rewriting (not to be confused with minification).
       * </pre>
       *
       * <code>bool rewriting = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRewriting() {
        
        rewriting_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> compression_ =
        java.util.Collections.emptyList();
      private void ensureCompressionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          compression_ = new java.util.ArrayList<java.lang.Integer>(compression_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @return A list containing the compression.
       */
      public java.util.List<tools.elide.data.CompressionMode> getCompressionList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, tools.elide.data.CompressionMode>(compression_, compression_converter_);
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @return The count of compression.
       */
      public int getCompressionCount() {
        return compression_.size();
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param index The index of the element to return.
       * @return The compression at the given index.
       */
      public tools.elide.data.CompressionMode getCompression(int index) {
        return compression_converter_.convert(compression_.get(index));
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param index The index to set the value at.
       * @param value The compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompression(
          int index, tools.elide.data.CompressionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompressionIsMutable();
        compression_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param value The compression to add.
       * @return This builder for chaining.
       */
      public Builder addCompression(tools.elide.data.CompressionMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCompressionIsMutable();
        compression_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param values The compression to add.
       * @return This builder for chaining.
       */
      public Builder addAllCompression(
          java.lang.Iterable<? extends tools.elide.data.CompressionMode> values) {
        ensureCompressionIsMutable();
        for (tools.elide.data.CompressionMode value : values) {
          compression_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompression() {
        compression_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @return A list containing the enum numeric values on the wire for compression.
       */
      public java.util.List<java.lang.Integer>
      getCompressionValueList() {
        return java.util.Collections.unmodifiableList(compression_);
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of compression at the given index.
       */
      public int getCompressionValue(int index) {
        return compression_.get(index);
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompressionValue(
          int index, int value) {
        ensureCompressionIsMutable();
        compression_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param value The enum numeric value on the wire for compression to add.
       * @return This builder for chaining.
       */
      public Builder addCompressionValue(int value) {
        ensureCompressionIsMutable();
        compression_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enabled compression algorithms. If this property is set, there may be compressed variants for each asset,
       * potentially depending on whether the compressed asset variant saved space over the wire.
       * </pre>
       *
       * <code>repeated .data.CompressionMode compression = 4;</code>
       * @param values The enum numeric values on the wire for compression to add.
       * @return This builder for chaining.
       */
      public Builder addAllCompressionValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureCompressionIsMutable();
        for (int value : values) {
          compression_.add(value);
        }
        onChanged();
        return this;
      }

      private tools.elide.assets.AssetBundle.DigestSettings digestSettings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.DigestSettings, tools.elide.assets.AssetBundle.DigestSettings.Builder, tools.elide.assets.AssetBundle.DigestSettingsOrBuilder> digestSettingsBuilder_;
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       * @return Whether the digestSettings field is set.
       */
      public boolean hasDigestSettings() {
        return digestSettingsBuilder_ != null || digestSettings_ != null;
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       * @return The digestSettings.
       */
      public tools.elide.assets.AssetBundle.DigestSettings getDigestSettings() {
        if (digestSettingsBuilder_ == null) {
          return digestSettings_ == null ? tools.elide.assets.AssetBundle.DigestSettings.getDefaultInstance() : digestSettings_;
        } else {
          return digestSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public Builder setDigestSettings(tools.elide.assets.AssetBundle.DigestSettings value) {
        if (digestSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          digestSettings_ = value;
          onChanged();
        } else {
          digestSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public Builder setDigestSettings(
          tools.elide.assets.AssetBundle.DigestSettings.Builder builderForValue) {
        if (digestSettingsBuilder_ == null) {
          digestSettings_ = builderForValue.build();
          onChanged();
        } else {
          digestSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public Builder mergeDigestSettings(tools.elide.assets.AssetBundle.DigestSettings value) {
        if (digestSettingsBuilder_ == null) {
          if (digestSettings_ != null) {
            digestSettings_ =
              tools.elide.assets.AssetBundle.DigestSettings.newBuilder(digestSettings_).mergeFrom(value).buildPartial();
          } else {
            digestSettings_ = value;
          }
          onChanged();
        } else {
          digestSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public Builder clearDigestSettings() {
        if (digestSettingsBuilder_ == null) {
          digestSettings_ = null;
          onChanged();
        } else {
          digestSettings_ = null;
          digestSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public tools.elide.assets.AssetBundle.DigestSettings.Builder getDigestSettingsBuilder() {
        
        onChanged();
        return getDigestSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      public tools.elide.assets.AssetBundle.DigestSettingsOrBuilder getDigestSettingsOrBuilder() {
        if (digestSettingsBuilder_ != null) {
          return digestSettingsBuilder_.getMessageOrBuilder();
        } else {
          return digestSettings_ == null ?
              tools.elide.assets.AssetBundle.DigestSettings.getDefaultInstance() : digestSettings_;
        }
      }
      /**
       * <pre>
       * Digest algorithm settings in use to calculate chunk tokens. These tokens are used to address pre-compressed asset
       * content, and are used to address assets dynamically from the server and frontend.
       * </pre>
       *
       * <code>.assets.AssetBundle.DigestSettings digest_settings = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.DigestSettings, tools.elide.assets.AssetBundle.DigestSettings.Builder, tools.elide.assets.AssetBundle.DigestSettingsOrBuilder> 
          getDigestSettingsFieldBuilder() {
        if (digestSettingsBuilder_ == null) {
          digestSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tools.elide.assets.AssetBundle.DigestSettings, tools.elide.assets.AssetBundle.DigestSettings.Builder, tools.elide.assets.AssetBundle.DigestSettingsOrBuilder>(
                  getDigestSettings(),
                  getParentForChildren(),
                  isClean());
          digestSettings_ = null;
        }
        return digestSettingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.BundlerSettings)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.BundlerSettings)
    private static final tools.elide.assets.AssetBundle.BundlerSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.BundlerSettings();
    }

    public static tools.elide.assets.AssetBundle.BundlerSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BundlerSettings>
        PARSER = new com.google.protobuf.AbstractParser<BundlerSettings>() {
      @java.lang.Override
      public BundlerSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BundlerSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BundlerSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BundlerSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.BundlerSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AssetDependenciesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.AssetDependencies)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @return A list containing the direct.
     */
    java.util.List<java.lang.String>
        getDirectList();
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @return The count of direct.
     */
    int getDirectCount();
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @param index The index of the element to return.
     * @return The direct at the given index.
     */
    java.lang.String getDirect(int index);
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the direct at the given index.
     */
    com.google.protobuf.ByteString
        getDirectBytes(int index);

    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @return A list containing the transitive.
     */
    java.util.List<java.lang.String>
        getTransitiveList();
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @return The count of transitive.
     */
    int getTransitiveCount();
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @param index The index of the element to return.
     * @return The transitive at the given index.
     */
    java.lang.String getTransitive(int index);
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitive at the given index.
     */
    com.google.protobuf.ByteString
        getTransitiveBytes(int index);

    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     * @return Whether the mask field is set.
     */
    boolean hasMask();
    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     * @return The mask.
     */
    tools.elide.struct.BloomFilter getMask();
    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     */
    tools.elide.struct.BloomFilterOrBuilder getMaskOrBuilder();
  }
  /**
   * <pre>
   * Specifies direct and transitive dependencies for a given asset bundle. This structure is used generically across
   * asset types, and refers to dependencies using their asset token.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.AssetDependencies}
   */
  public static final class AssetDependencies extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.AssetDependencies)
      AssetDependenciesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AssetDependencies.newBuilder() to construct.
    private AssetDependencies(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AssetDependencies() {
      direct_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      transitive_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AssetDependencies();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AssetDependencies(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                direct_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              direct_.add(s);
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                transitive_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              transitive_.add(s);
              break;
            }
            case 26: {
              tools.elide.struct.BloomFilter.Builder subBuilder = null;
              if (mask_ != null) {
                subBuilder = mask_.toBuilder();
              }
              mask_ = input.readMessage(tools.elide.struct.BloomFilter.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mask_);
                mask_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          direct_ = direct_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          transitive_ = transitive_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetDependencies_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetDependencies_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.AssetDependencies.class, tools.elide.assets.AssetBundle.AssetDependencies.Builder.class);
    }

    public static final int DIRECT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList direct_;
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @return A list containing the direct.
     */
    public com.google.protobuf.ProtocolStringList
        getDirectList() {
      return direct_;
    }
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @return The count of direct.
     */
    public int getDirectCount() {
      return direct_.size();
    }
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @param index The index of the element to return.
     * @return The direct at the given index.
     */
    public java.lang.String getDirect(int index) {
      return direct_.get(index);
    }
    /**
     * <pre>
     * Tokens for direct dependencies.
     * </pre>
     *
     * <code>repeated string direct = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the direct at the given index.
     */
    public com.google.protobuf.ByteString
        getDirectBytes(int index) {
      return direct_.getByteString(index);
    }

    public static final int TRANSITIVE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList transitive_;
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @return A list containing the transitive.
     */
    public com.google.protobuf.ProtocolStringList
        getTransitiveList() {
      return transitive_;
    }
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @return The count of transitive.
     */
    public int getTransitiveCount() {
      return transitive_.size();
    }
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @param index The index of the element to return.
     * @return The transitive at the given index.
     */
    public java.lang.String getTransitive(int index) {
      return transitive_.get(index);
    }
    /**
     * <pre>
     * Tokens for transitive dependencies.
     * </pre>
     *
     * <code>repeated string transitive = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transitive at the given index.
     */
    public com.google.protobuf.ByteString
        getTransitiveBytes(int index) {
      return transitive_.getByteString(index);
    }

    public static final int MASK_FIELD_NUMBER = 3;
    private tools.elide.struct.BloomFilter mask_;
    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     * @return Whether the mask field is set.
     */
    @java.lang.Override
    public boolean hasMask() {
      return mask_ != null;
    }
    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     * @return The mask.
     */
    @java.lang.Override
    public tools.elide.struct.BloomFilter getMask() {
      return mask_ == null ? tools.elide.struct.BloomFilter.getDefaultInstance() : mask_;
    }
    /**
     * <pre>
     * Bitmask filter calculated from the full set of a given asset's dependency tokens.
     * </pre>
     *
     * <code>.struct.BloomFilter mask = 3;</code>
     */
    @java.lang.Override
    public tools.elide.struct.BloomFilterOrBuilder getMaskOrBuilder() {
      return getMask();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < direct_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, direct_.getRaw(i));
      }
      for (int i = 0; i < transitive_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, transitive_.getRaw(i));
      }
      if (mask_ != null) {
        output.writeMessage(3, getMask());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < direct_.size(); i++) {
          dataSize += computeStringSizeNoTag(direct_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDirectList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < transitive_.size(); i++) {
          dataSize += computeStringSizeNoTag(transitive_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTransitiveList().size();
      }
      if (mask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMask());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.AssetDependencies)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.AssetDependencies other = (tools.elide.assets.AssetBundle.AssetDependencies) obj;

      if (!getDirectList()
          .equals(other.getDirectList())) return false;
      if (!getTransitiveList()
          .equals(other.getTransitiveList())) return false;
      if (hasMask() != other.hasMask()) return false;
      if (hasMask()) {
        if (!getMask()
            .equals(other.getMask())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDirectCount() > 0) {
        hash = (37 * hash) + DIRECT_FIELD_NUMBER;
        hash = (53 * hash) + getDirectList().hashCode();
      }
      if (getTransitiveCount() > 0) {
        hash = (37 * hash) + TRANSITIVE_FIELD_NUMBER;
        hash = (53 * hash) + getTransitiveList().hashCode();
      }
      if (hasMask()) {
        hash = (37 * hash) + MASK_FIELD_NUMBER;
        hash = (53 * hash) + getMask().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetDependencies parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.AssetDependencies prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies direct and transitive dependencies for a given asset bundle. This structure is used generically across
     * asset types, and refers to dependencies using their asset token.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.AssetDependencies}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.AssetDependencies)
        tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetDependencies_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetDependencies_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.AssetDependencies.class, tools.elide.assets.AssetBundle.AssetDependencies.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.AssetDependencies.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        direct_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        transitive_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (maskBuilder_ == null) {
          mask_ = null;
        } else {
          mask_ = null;
          maskBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetDependencies_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetDependencies getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetDependencies build() {
        tools.elide.assets.AssetBundle.AssetDependencies result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetDependencies buildPartial() {
        tools.elide.assets.AssetBundle.AssetDependencies result = new tools.elide.assets.AssetBundle.AssetDependencies(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          direct_ = direct_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.direct_ = direct_;
        if (((bitField0_ & 0x00000002) != 0)) {
          transitive_ = transitive_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.transitive_ = transitive_;
        if (maskBuilder_ == null) {
          result.mask_ = mask_;
        } else {
          result.mask_ = maskBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.AssetDependencies) {
          return mergeFrom((tools.elide.assets.AssetBundle.AssetDependencies)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.AssetDependencies other) {
        if (other == tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance()) return this;
        if (!other.direct_.isEmpty()) {
          if (direct_.isEmpty()) {
            direct_ = other.direct_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDirectIsMutable();
            direct_.addAll(other.direct_);
          }
          onChanged();
        }
        if (!other.transitive_.isEmpty()) {
          if (transitive_.isEmpty()) {
            transitive_ = other.transitive_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTransitiveIsMutable();
            transitive_.addAll(other.transitive_);
          }
          onChanged();
        }
        if (other.hasMask()) {
          mergeMask(other.getMask());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.AssetDependencies parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.AssetDependencies) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList direct_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDirectIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          direct_ = new com.google.protobuf.LazyStringArrayList(direct_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @return A list containing the direct.
       */
      public com.google.protobuf.ProtocolStringList
          getDirectList() {
        return direct_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @return The count of direct.
       */
      public int getDirectCount() {
        return direct_.size();
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param index The index of the element to return.
       * @return The direct at the given index.
       */
      public java.lang.String getDirect(int index) {
        return direct_.get(index);
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the direct at the given index.
       */
      public com.google.protobuf.ByteString
          getDirectBytes(int index) {
        return direct_.getByteString(index);
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param index The index to set the value at.
       * @param value The direct to set.
       * @return This builder for chaining.
       */
      public Builder setDirect(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDirectIsMutable();
        direct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param value The direct to add.
       * @return This builder for chaining.
       */
      public Builder addDirect(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDirectIsMutable();
        direct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param values The direct to add.
       * @return This builder for chaining.
       */
      public Builder addAllDirect(
          java.lang.Iterable<java.lang.String> values) {
        ensureDirectIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, direct_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirect() {
        direct_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for direct dependencies.
       * </pre>
       *
       * <code>repeated string direct = 1;</code>
       * @param value The bytes of the direct to add.
       * @return This builder for chaining.
       */
      public Builder addDirectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureDirectIsMutable();
        direct_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList transitive_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTransitiveIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          transitive_ = new com.google.protobuf.LazyStringArrayList(transitive_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @return A list containing the transitive.
       */
      public com.google.protobuf.ProtocolStringList
          getTransitiveList() {
        return transitive_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @return The count of transitive.
       */
      public int getTransitiveCount() {
        return transitive_.size();
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param index The index of the element to return.
       * @return The transitive at the given index.
       */
      public java.lang.String getTransitive(int index) {
        return transitive_.get(index);
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the transitive at the given index.
       */
      public com.google.protobuf.ByteString
          getTransitiveBytes(int index) {
        return transitive_.getByteString(index);
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param index The index to set the value at.
       * @param value The transitive to set.
       * @return This builder for chaining.
       */
      public Builder setTransitive(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransitiveIsMutable();
        transitive_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param value The transitive to add.
       * @return This builder for chaining.
       */
      public Builder addTransitive(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransitiveIsMutable();
        transitive_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param values The transitive to add.
       * @return This builder for chaining.
       */
      public Builder addAllTransitive(
          java.lang.Iterable<java.lang.String> values) {
        ensureTransitiveIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transitive_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransitive() {
        transitive_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Tokens for transitive dependencies.
       * </pre>
       *
       * <code>repeated string transitive = 2;</code>
       * @param value The bytes of the transitive to add.
       * @return This builder for chaining.
       */
      public Builder addTransitiveBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTransitiveIsMutable();
        transitive_.add(value);
        onChanged();
        return this;
      }

      private tools.elide.struct.BloomFilter mask_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.struct.BloomFilter, tools.elide.struct.BloomFilter.Builder, tools.elide.struct.BloomFilterOrBuilder> maskBuilder_;
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       * @return Whether the mask field is set.
       */
      public boolean hasMask() {
        return maskBuilder_ != null || mask_ != null;
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       * @return The mask.
       */
      public tools.elide.struct.BloomFilter getMask() {
        if (maskBuilder_ == null) {
          return mask_ == null ? tools.elide.struct.BloomFilter.getDefaultInstance() : mask_;
        } else {
          return maskBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public Builder setMask(tools.elide.struct.BloomFilter value) {
        if (maskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mask_ = value;
          onChanged();
        } else {
          maskBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public Builder setMask(
          tools.elide.struct.BloomFilter.Builder builderForValue) {
        if (maskBuilder_ == null) {
          mask_ = builderForValue.build();
          onChanged();
        } else {
          maskBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public Builder mergeMask(tools.elide.struct.BloomFilter value) {
        if (maskBuilder_ == null) {
          if (mask_ != null) {
            mask_ =
              tools.elide.struct.BloomFilter.newBuilder(mask_).mergeFrom(value).buildPartial();
          } else {
            mask_ = value;
          }
          onChanged();
        } else {
          maskBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public Builder clearMask() {
        if (maskBuilder_ == null) {
          mask_ = null;
          onChanged();
        } else {
          mask_ = null;
          maskBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public tools.elide.struct.BloomFilter.Builder getMaskBuilder() {
        
        onChanged();
        return getMaskFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      public tools.elide.struct.BloomFilterOrBuilder getMaskOrBuilder() {
        if (maskBuilder_ != null) {
          return maskBuilder_.getMessageOrBuilder();
        } else {
          return mask_ == null ?
              tools.elide.struct.BloomFilter.getDefaultInstance() : mask_;
        }
      }
      /**
       * <pre>
       * Bitmask filter calculated from the full set of a given asset's dependency tokens.
       * </pre>
       *
       * <code>.struct.BloomFilter mask = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.struct.BloomFilter, tools.elide.struct.BloomFilter.Builder, tools.elide.struct.BloomFilterOrBuilder> 
          getMaskFieldBuilder() {
        if (maskBuilder_ == null) {
          maskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tools.elide.struct.BloomFilter, tools.elide.struct.BloomFilter.Builder, tools.elide.struct.BloomFilterOrBuilder>(
                  getMask(),
                  getParentForChildren(),
                  isClean());
          mask_ = null;
        }
        return maskBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.AssetDependencies)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.AssetDependencies)
    private static final tools.elide.assets.AssetBundle.AssetDependencies DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.AssetDependencies();
    }

    public static tools.elide.assets.AssetBundle.AssetDependencies getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AssetDependencies>
        PARSER = new com.google.protobuf.AbstractParser<AssetDependencies>() {
      @java.lang.Override
      public AssetDependencies parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AssetDependencies(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AssetDependencies> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AssetDependencies> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetDependencies getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StyleBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.StyleBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Style module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    java.lang.String getModule();
    /**
     * <pre>
     * Style module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    com.google.protobuf.ByteString
        getModuleBytes();

    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     * @return Whether the rewriteMap field is set.
     */
    boolean hasRewriteMap();
    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     * @return The rewriteMap.
     */
    tools.elide.assets.AssetBundle.RewriteMap getRewriteMap();
    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     */
    tools.elide.assets.AssetBundle.RewriteMapOrBuilder getRewriteMapOrBuilder();

    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return Whether the dependencies field is set.
     */
    boolean hasDependencies();
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return The dependencies.
     */
    tools.elide.assets.AssetBundle.AssetDependencies getDependencies();
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     */
    tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder();

    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> 
        getAssetList();
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getAsset(int index);
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    int getAssetCount();
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    java.util.List<? extends tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder> 
        getAssetOrBuilderList();
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder getAssetOrBuilder(
        int index);

    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 5;</code>
     * @return The compressable.
     */
    boolean getCompressable();

    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 6;</code>
     * @return The cacheable.
     */
    boolean getCacheable();
  }
  /**
   * <pre>
   * Specifies a bundle of CSS code, containing one or more stylesheets to be included in an HTML page, and optionally
   * one or more style symbol rewrite maps.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.StyleBundle}
   */
  public static final class StyleBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.StyleBundle)
      StyleBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StyleBundle.newBuilder() to construct.
    private StyleBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StyleBundle() {
      module_ = "";
      asset_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StyleBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StyleBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              module_ = s;
              break;
            }
            case 18: {
              tools.elide.assets.AssetBundle.RewriteMap.Builder subBuilder = null;
              if (rewriteMap_ != null) {
                subBuilder = rewriteMap_.toBuilder();
              }
              rewriteMap_ = input.readMessage(tools.elide.assets.AssetBundle.RewriteMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rewriteMap_);
                rewriteMap_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              tools.elide.assets.AssetBundle.AssetDependencies.Builder subBuilder = null;
              if (dependencies_ != null) {
                subBuilder = dependencies_.toBuilder();
              }
              dependencies_ = input.readMessage(tools.elide.assets.AssetBundle.AssetDependencies.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dependencies_);
                dependencies_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset>();
                mutable_bitField0_ |= 0x00000001;
              }
              asset_.add(
                  input.readMessage(tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.parser(), extensionRegistry));
              break;
            }
            case 40: {

              compressable_ = input.readBool();
              break;
            }
            case 48: {

              cacheable_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          asset_ = java.util.Collections.unmodifiableList(asset_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.StyleBundle.class, tools.elide.assets.AssetBundle.StyleBundle.Builder.class);
    }

    public interface StyleAssetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:assets.AssetBundle.StyleBundle.StyleAsset)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The token.
       */
      java.lang.String getToken();
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      com.google.protobuf.ByteString
          getTokenBytes();

      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       * @return Whether the stylesheet field is set.
       */
      boolean hasStylesheet();
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       * @return The stylesheet.
       */
      tools.elide.page.Context.Styles.Stylesheet getStylesheet();
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       */
      tools.elide.page.Context.Styles.StylesheetOrBuilder getStylesheetOrBuilder();

      /**
       * <pre>
       * Whether a renaming map is available for this stylesheet.
       * </pre>
       *
       * <code>bool renaming = 4;</code>
       * @return The renaming.
       */
      boolean getRenaming();
    }
    /**
     * <pre>
     * Describes the structure of an individual style asset, which is constituent to the bundle that holds it.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.StyleBundle.StyleAsset}
     */
    public static final class StyleAsset extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:assets.AssetBundle.StyleBundle.StyleAsset)
        StyleAssetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use StyleAsset.newBuilder() to construct.
      private StyleAsset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StyleAsset() {
        token_ = "";
        filename_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new StyleAsset();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private StyleAsset(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                token_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                filename_ = s;
                break;
              }
              case 26: {
                tools.elide.page.Context.Styles.Stylesheet.Builder subBuilder = null;
                if (stylesheet_ != null) {
                  subBuilder = stylesheet_.toBuilder();
                }
                stylesheet_ = input.readMessage(tools.elide.page.Context.Styles.Stylesheet.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(stylesheet_);
                  stylesheet_ = subBuilder.buildPartial();
                }

                break;
              }
              case 32: {

                renaming_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_StyleAsset_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_StyleAsset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.class, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder.class);
      }

      public static final int TOKEN_FIELD_NUMBER = 1;
      private volatile java.lang.Object token_;
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filename_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STYLESHEET_FIELD_NUMBER = 3;
      private tools.elide.page.Context.Styles.Stylesheet stylesheet_;
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       * @return Whether the stylesheet field is set.
       */
      @java.lang.Override
      public boolean hasStylesheet() {
        return stylesheet_ != null;
      }
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       * @return The stylesheet.
       */
      @java.lang.Override
      public tools.elide.page.Context.Styles.Stylesheet getStylesheet() {
        return stylesheet_ == null ? tools.elide.page.Context.Styles.Stylesheet.getDefaultInstance() : stylesheet_;
      }
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
       */
      @java.lang.Override
      public tools.elide.page.Context.Styles.StylesheetOrBuilder getStylesheetOrBuilder() {
        return getStylesheet();
      }

      public static final int RENAMING_FIELD_NUMBER = 4;
      private boolean renaming_;
      /**
       * <pre>
       * Whether a renaming map is available for this stylesheet.
       * </pre>
       *
       * <code>bool renaming = 4;</code>
       * @return The renaming.
       */
      @java.lang.Override
      public boolean getRenaming() {
        return renaming_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (stylesheet_ != null) {
          output.writeMessage(3, getStylesheet());
        }
        if (renaming_ != false) {
          output.writeBool(4, renaming_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (stylesheet_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getStylesheet());
        }
        if (renaming_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, renaming_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tools.elide.assets.AssetBundle.StyleBundle.StyleAsset)) {
          return super.equals(obj);
        }
        tools.elide.assets.AssetBundle.StyleBundle.StyleAsset other = (tools.elide.assets.AssetBundle.StyleBundle.StyleAsset) obj;

        if (!getToken()
            .equals(other.getToken())) return false;
        if (!getFilename()
            .equals(other.getFilename())) return false;
        if (hasStylesheet() != other.hasStylesheet()) return false;
        if (hasStylesheet()) {
          if (!getStylesheet()
              .equals(other.getStylesheet())) return false;
        }
        if (getRenaming()
            != other.getRenaming()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getToken().hashCode();
        hash = (37 * hash) + FILENAME_FIELD_NUMBER;
        hash = (53 * hash) + getFilename().hashCode();
        if (hasStylesheet()) {
          hash = (37 * hash) + STYLESHEET_FIELD_NUMBER;
          hash = (53 * hash) + getStylesheet().hashCode();
        }
        hash = (37 * hash) + RENAMING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRenaming());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tools.elide.assets.AssetBundle.StyleBundle.StyleAsset prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Describes the structure of an individual style asset, which is constituent to the bundle that holds it.
       * </pre>
       *
       * Protobuf type {@code assets.AssetBundle.StyleBundle.StyleAsset}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:assets.AssetBundle.StyleBundle.StyleAsset)
          tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_StyleAsset_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_StyleAsset_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.class, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder.class);
        }

        // Construct using tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          token_ = "";

          filename_ = "";

          if (stylesheetBuilder_ == null) {
            stylesheet_ = null;
          } else {
            stylesheet_ = null;
            stylesheetBuilder_ = null;
          }
          renaming_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_StyleAsset_descriptor;
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getDefaultInstanceForType() {
          return tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.getDefaultInstance();
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset build() {
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset buildPartial() {
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset result = new tools.elide.assets.AssetBundle.StyleBundle.StyleAsset(this);
          result.token_ = token_;
          result.filename_ = filename_;
          if (stylesheetBuilder_ == null) {
            result.stylesheet_ = stylesheet_;
          } else {
            result.stylesheet_ = stylesheetBuilder_.build();
          }
          result.renaming_ = renaming_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tools.elide.assets.AssetBundle.StyleBundle.StyleAsset) {
            return mergeFrom((tools.elide.assets.AssetBundle.StyleBundle.StyleAsset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tools.elide.assets.AssetBundle.StyleBundle.StyleAsset other) {
          if (other == tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.getDefaultInstance()) return this;
          if (!other.getToken().isEmpty()) {
            token_ = other.token_;
            onChanged();
          }
          if (!other.getFilename().isEmpty()) {
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasStylesheet()) {
            mergeStylesheet(other.getStylesheet());
          }
          if (other.getRenaming() != false) {
            setRenaming(other.getRenaming());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tools.elide.assets.AssetBundle.StyleBundle.StyleAsset) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object token_ = "";
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return The token.
         */
        public java.lang.String getToken() {
          java.lang.Object ref = token_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            token_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return The bytes for token.
         */
        public com.google.protobuf.ByteString
            getTokenBytes() {
          java.lang.Object ref = token_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            token_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          token_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          
          token_ = getDefaultInstance().getToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @param value The bytes for token to set.
         * @return This builder for chaining.
         */
        public Builder setTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          token_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            filename_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          filename_ = value;
          onChanged();
          return this;
        }

        private tools.elide.page.Context.Styles.Stylesheet stylesheet_;
        private com.google.protobuf.SingleFieldBuilderV3<
            tools.elide.page.Context.Styles.Stylesheet, tools.elide.page.Context.Styles.Stylesheet.Builder, tools.elide.page.Context.Styles.StylesheetOrBuilder> stylesheetBuilder_;
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         * @return Whether the stylesheet field is set.
         */
        public boolean hasStylesheet() {
          return stylesheetBuilder_ != null || stylesheet_ != null;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         * @return The stylesheet.
         */
        public tools.elide.page.Context.Styles.Stylesheet getStylesheet() {
          if (stylesheetBuilder_ == null) {
            return stylesheet_ == null ? tools.elide.page.Context.Styles.Stylesheet.getDefaultInstance() : stylesheet_;
          } else {
            return stylesheetBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public Builder setStylesheet(tools.elide.page.Context.Styles.Stylesheet value) {
          if (stylesheetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stylesheet_ = value;
            onChanged();
          } else {
            stylesheetBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public Builder setStylesheet(
            tools.elide.page.Context.Styles.Stylesheet.Builder builderForValue) {
          if (stylesheetBuilder_ == null) {
            stylesheet_ = builderForValue.build();
            onChanged();
          } else {
            stylesheetBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public Builder mergeStylesheet(tools.elide.page.Context.Styles.Stylesheet value) {
          if (stylesheetBuilder_ == null) {
            if (stylesheet_ != null) {
              stylesheet_ =
                tools.elide.page.Context.Styles.Stylesheet.newBuilder(stylesheet_).mergeFrom(value).buildPartial();
            } else {
              stylesheet_ = value;
            }
            onChanged();
          } else {
            stylesheetBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public Builder clearStylesheet() {
          if (stylesheetBuilder_ == null) {
            stylesheet_ = null;
            onChanged();
          } else {
            stylesheet_ = null;
            stylesheetBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public tools.elide.page.Context.Styles.Stylesheet.Builder getStylesheetBuilder() {
          
          onChanged();
          return getStylesheetFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        public tools.elide.page.Context.Styles.StylesheetOrBuilder getStylesheetOrBuilder() {
          if (stylesheetBuilder_ != null) {
            return stylesheetBuilder_.getMessageOrBuilder();
          } else {
            return stylesheet_ == null ?
                tools.elide.page.Context.Styles.Stylesheet.getDefaultInstance() : stylesheet_;
          }
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Styles.Stylesheet stylesheet = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tools.elide.page.Context.Styles.Stylesheet, tools.elide.page.Context.Styles.Stylesheet.Builder, tools.elide.page.Context.Styles.StylesheetOrBuilder> 
            getStylesheetFieldBuilder() {
          if (stylesheetBuilder_ == null) {
            stylesheetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tools.elide.page.Context.Styles.Stylesheet, tools.elide.page.Context.Styles.Stylesheet.Builder, tools.elide.page.Context.Styles.StylesheetOrBuilder>(
                    getStylesheet(),
                    getParentForChildren(),
                    isClean());
            stylesheet_ = null;
          }
          return stylesheetBuilder_;
        }

        private boolean renaming_ ;
        /**
         * <pre>
         * Whether a renaming map is available for this stylesheet.
         * </pre>
         *
         * <code>bool renaming = 4;</code>
         * @return The renaming.
         */
        @java.lang.Override
        public boolean getRenaming() {
          return renaming_;
        }
        /**
         * <pre>
         * Whether a renaming map is available for this stylesheet.
         * </pre>
         *
         * <code>bool renaming = 4;</code>
         * @param value The renaming to set.
         * @return This builder for chaining.
         */
        public Builder setRenaming(boolean value) {
          
          renaming_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether a renaming map is available for this stylesheet.
         * </pre>
         *
         * <code>bool renaming = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearRenaming() {
          
          renaming_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:assets.AssetBundle.StyleBundle.StyleAsset)
      }

      // @@protoc_insertion_point(class_scope:assets.AssetBundle.StyleBundle.StyleAsset)
      private static final tools.elide.assets.AssetBundle.StyleBundle.StyleAsset DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.StyleBundle.StyleAsset();
      }

      public static tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StyleAsset>
          PARSER = new com.google.protobuf.AbstractParser<StyleAsset>() {
        @java.lang.Override
        public StyleAsset parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new StyleAsset(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StyleAsset> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StyleAsset> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MODULE_FIELD_NUMBER = 1;
    private volatile java.lang.Object module_;
    /**
     * <pre>
     * Style module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    @java.lang.Override
    public java.lang.String getModule() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        module_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Style module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModuleBytes() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        module_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REWRITE_MAP_FIELD_NUMBER = 2;
    private tools.elide.assets.AssetBundle.RewriteMap rewriteMap_;
    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     * @return Whether the rewriteMap field is set.
     */
    @java.lang.Override
    public boolean hasRewriteMap() {
      return rewriteMap_ != null;
    }
    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     * @return The rewriteMap.
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.RewriteMap getRewriteMap() {
      return rewriteMap_ == null ? tools.elide.assets.AssetBundle.RewriteMap.getDefaultInstance() : rewriteMap_;
    }
    /**
     * <pre>
     * Rewrite maps associated with this bundle, if applicable.
     * </pre>
     *
     * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.RewriteMapOrBuilder getRewriteMapOrBuilder() {
      return getRewriteMap();
    }

    public static final int DEPENDENCIES_FIELD_NUMBER = 3;
    private tools.elide.assets.AssetBundle.AssetDependencies dependencies_;
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return Whether the dependencies field is set.
     */
    @java.lang.Override
    public boolean hasDependencies() {
      return dependencies_ != null;
    }
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return The dependencies.
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetDependencies getDependencies() {
      return dependencies_ == null ? tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
    }
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder() {
      return getDependencies();
    }

    public static final int ASSET_FIELD_NUMBER = 4;
    private java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> asset_;
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    @java.lang.Override
    public java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> getAssetList() {
      return asset_;
    }
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder> 
        getAssetOrBuilderList() {
      return asset_;
    }
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    @java.lang.Override
    public int getAssetCount() {
      return asset_.size();
    }
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getAsset(int index) {
      return asset_.get(index);
    }
    /**
     * <pre>
     * Stylesheet sources associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder getAssetOrBuilder(
        int index) {
      return asset_.get(index);
    }

    public static final int COMPRESSABLE_FIELD_NUMBER = 5;
    private boolean compressable_;
    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 5;</code>
     * @return The compressable.
     */
    @java.lang.Override
    public boolean getCompressable() {
      return compressable_;
    }

    public static final int CACHEABLE_FIELD_NUMBER = 6;
    private boolean cacheable_;
    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 6;</code>
     * @return The cacheable.
     */
    @java.lang.Override
    public boolean getCacheable() {
      return cacheable_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, module_);
      }
      if (rewriteMap_ != null) {
        output.writeMessage(2, getRewriteMap());
      }
      if (dependencies_ != null) {
        output.writeMessage(3, getDependencies());
      }
      for (int i = 0; i < asset_.size(); i++) {
        output.writeMessage(4, asset_.get(i));
      }
      if (compressable_ != false) {
        output.writeBool(5, compressable_);
      }
      if (cacheable_ != false) {
        output.writeBool(6, cacheable_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, module_);
      }
      if (rewriteMap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRewriteMap());
      }
      if (dependencies_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDependencies());
      }
      for (int i = 0; i < asset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, asset_.get(i));
      }
      if (compressable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, compressable_);
      }
      if (cacheable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, cacheable_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.StyleBundle)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.StyleBundle other = (tools.elide.assets.AssetBundle.StyleBundle) obj;

      if (!getModule()
          .equals(other.getModule())) return false;
      if (hasRewriteMap() != other.hasRewriteMap()) return false;
      if (hasRewriteMap()) {
        if (!getRewriteMap()
            .equals(other.getRewriteMap())) return false;
      }
      if (hasDependencies() != other.hasDependencies()) return false;
      if (hasDependencies()) {
        if (!getDependencies()
            .equals(other.getDependencies())) return false;
      }
      if (!getAssetList()
          .equals(other.getAssetList())) return false;
      if (getCompressable()
          != other.getCompressable()) return false;
      if (getCacheable()
          != other.getCacheable()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODULE_FIELD_NUMBER;
      hash = (53 * hash) + getModule().hashCode();
      if (hasRewriteMap()) {
        hash = (37 * hash) + REWRITE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + getRewriteMap().hashCode();
      }
      if (hasDependencies()) {
        hash = (37 * hash) + DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getDependencies().hashCode();
      }
      if (getAssetCount() > 0) {
        hash = (37 * hash) + ASSET_FIELD_NUMBER;
        hash = (53 * hash) + getAssetList().hashCode();
      }
      hash = (37 * hash) + COMPRESSABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompressable());
      hash = (37 * hash) + CACHEABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCacheable());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.StyleBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.StyleBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a bundle of CSS code, containing one or more stylesheets to be included in an HTML page, and optionally
     * one or more style symbol rewrite maps.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.StyleBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.StyleBundle)
        tools.elide.assets.AssetBundle.StyleBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.StyleBundle.class, tools.elide.assets.AssetBundle.StyleBundle.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.StyleBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAssetFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        module_ = "";

        if (rewriteMapBuilder_ == null) {
          rewriteMap_ = null;
        } else {
          rewriteMap_ = null;
          rewriteMapBuilder_ = null;
        }
        if (dependenciesBuilder_ == null) {
          dependencies_ = null;
        } else {
          dependencies_ = null;
          dependenciesBuilder_ = null;
        }
        if (assetBuilder_ == null) {
          asset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          assetBuilder_.clear();
        }
        compressable_ = false;

        cacheable_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StyleBundle_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.StyleBundle getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.StyleBundle.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.StyleBundle build() {
        tools.elide.assets.AssetBundle.StyleBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.StyleBundle buildPartial() {
        tools.elide.assets.AssetBundle.StyleBundle result = new tools.elide.assets.AssetBundle.StyleBundle(this);
        int from_bitField0_ = bitField0_;
        result.module_ = module_;
        if (rewriteMapBuilder_ == null) {
          result.rewriteMap_ = rewriteMap_;
        } else {
          result.rewriteMap_ = rewriteMapBuilder_.build();
        }
        if (dependenciesBuilder_ == null) {
          result.dependencies_ = dependencies_;
        } else {
          result.dependencies_ = dependenciesBuilder_.build();
        }
        if (assetBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            asset_ = java.util.Collections.unmodifiableList(asset_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.asset_ = asset_;
        } else {
          result.asset_ = assetBuilder_.build();
        }
        result.compressable_ = compressable_;
        result.cacheable_ = cacheable_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.StyleBundle) {
          return mergeFrom((tools.elide.assets.AssetBundle.StyleBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.StyleBundle other) {
        if (other == tools.elide.assets.AssetBundle.StyleBundle.getDefaultInstance()) return this;
        if (!other.getModule().isEmpty()) {
          module_ = other.module_;
          onChanged();
        }
        if (other.hasRewriteMap()) {
          mergeRewriteMap(other.getRewriteMap());
        }
        if (other.hasDependencies()) {
          mergeDependencies(other.getDependencies());
        }
        if (assetBuilder_ == null) {
          if (!other.asset_.isEmpty()) {
            if (asset_.isEmpty()) {
              asset_ = other.asset_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAssetIsMutable();
              asset_.addAll(other.asset_);
            }
            onChanged();
          }
        } else {
          if (!other.asset_.isEmpty()) {
            if (assetBuilder_.isEmpty()) {
              assetBuilder_.dispose();
              assetBuilder_ = null;
              asset_ = other.asset_;
              bitField0_ = (bitField0_ & ~0x00000001);
              assetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAssetFieldBuilder() : null;
            } else {
              assetBuilder_.addAllMessages(other.asset_);
            }
          }
        }
        if (other.getCompressable() != false) {
          setCompressable(other.getCompressable());
        }
        if (other.getCacheable() != false) {
          setCacheable(other.getCacheable());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.StyleBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.StyleBundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object module_ = "";
      /**
       * <pre>
       * Style module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The module.
       */
      public java.lang.String getModule() {
        java.lang.Object ref = module_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          module_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Style module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The bytes for module.
       */
      public com.google.protobuf.ByteString
          getModuleBytes() {
        java.lang.Object ref = module_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          module_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Style module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The module to set.
       * @return This builder for chaining.
       */
      public Builder setModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        module_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Style module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearModule() {
        
        module_ = getDefaultInstance().getModule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Style module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The bytes for module to set.
       * @return This builder for chaining.
       */
      public Builder setModuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        module_ = value;
        onChanged();
        return this;
      }

      private tools.elide.assets.AssetBundle.RewriteMap rewriteMap_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.RewriteMap, tools.elide.assets.AssetBundle.RewriteMap.Builder, tools.elide.assets.AssetBundle.RewriteMapOrBuilder> rewriteMapBuilder_;
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       * @return Whether the rewriteMap field is set.
       */
      public boolean hasRewriteMap() {
        return rewriteMapBuilder_ != null || rewriteMap_ != null;
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       * @return The rewriteMap.
       */
      public tools.elide.assets.AssetBundle.RewriteMap getRewriteMap() {
        if (rewriteMapBuilder_ == null) {
          return rewriteMap_ == null ? tools.elide.assets.AssetBundle.RewriteMap.getDefaultInstance() : rewriteMap_;
        } else {
          return rewriteMapBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public Builder setRewriteMap(tools.elide.assets.AssetBundle.RewriteMap value) {
        if (rewriteMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rewriteMap_ = value;
          onChanged();
        } else {
          rewriteMapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public Builder setRewriteMap(
          tools.elide.assets.AssetBundle.RewriteMap.Builder builderForValue) {
        if (rewriteMapBuilder_ == null) {
          rewriteMap_ = builderForValue.build();
          onChanged();
        } else {
          rewriteMapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public Builder mergeRewriteMap(tools.elide.assets.AssetBundle.RewriteMap value) {
        if (rewriteMapBuilder_ == null) {
          if (rewriteMap_ != null) {
            rewriteMap_ =
              tools.elide.assets.AssetBundle.RewriteMap.newBuilder(rewriteMap_).mergeFrom(value).buildPartial();
          } else {
            rewriteMap_ = value;
          }
          onChanged();
        } else {
          rewriteMapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public Builder clearRewriteMap() {
        if (rewriteMapBuilder_ == null) {
          rewriteMap_ = null;
          onChanged();
        } else {
          rewriteMap_ = null;
          rewriteMapBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public tools.elide.assets.AssetBundle.RewriteMap.Builder getRewriteMapBuilder() {
        
        onChanged();
        return getRewriteMapFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      public tools.elide.assets.AssetBundle.RewriteMapOrBuilder getRewriteMapOrBuilder() {
        if (rewriteMapBuilder_ != null) {
          return rewriteMapBuilder_.getMessageOrBuilder();
        } else {
          return rewriteMap_ == null ?
              tools.elide.assets.AssetBundle.RewriteMap.getDefaultInstance() : rewriteMap_;
        }
      }
      /**
       * <pre>
       * Rewrite maps associated with this bundle, if applicable.
       * </pre>
       *
       * <code>.assets.AssetBundle.RewriteMap rewrite_map = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.RewriteMap, tools.elide.assets.AssetBundle.RewriteMap.Builder, tools.elide.assets.AssetBundle.RewriteMapOrBuilder> 
          getRewriteMapFieldBuilder() {
        if (rewriteMapBuilder_ == null) {
          rewriteMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tools.elide.assets.AssetBundle.RewriteMap, tools.elide.assets.AssetBundle.RewriteMap.Builder, tools.elide.assets.AssetBundle.RewriteMapOrBuilder>(
                  getRewriteMap(),
                  getParentForChildren(),
                  isClean());
          rewriteMap_ = null;
        }
        return rewriteMapBuilder_;
      }

      private tools.elide.assets.AssetBundle.AssetDependencies dependencies_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder> dependenciesBuilder_;
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       * @return Whether the dependencies field is set.
       */
      public boolean hasDependencies() {
        return dependenciesBuilder_ != null || dependencies_ != null;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       * @return The dependencies.
       */
      public tools.elide.assets.AssetBundle.AssetDependencies getDependencies() {
        if (dependenciesBuilder_ == null) {
          return dependencies_ == null ? tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
        } else {
          return dependenciesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder setDependencies(tools.elide.assets.AssetBundle.AssetDependencies value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dependencies_ = value;
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder setDependencies(
          tools.elide.assets.AssetBundle.AssetDependencies.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          dependencies_ = builderForValue.build();
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder mergeDependencies(tools.elide.assets.AssetBundle.AssetDependencies value) {
        if (dependenciesBuilder_ == null) {
          if (dependencies_ != null) {
            dependencies_ =
              tools.elide.assets.AssetBundle.AssetDependencies.newBuilder(dependencies_).mergeFrom(value).buildPartial();
          } else {
            dependencies_ = value;
          }
          onChanged();
        } else {
          dependenciesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder clearDependencies() {
        if (dependenciesBuilder_ == null) {
          dependencies_ = null;
          onChanged();
        } else {
          dependencies_ = null;
          dependenciesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public tools.elide.assets.AssetBundle.AssetDependencies.Builder getDependenciesBuilder() {
        
        onChanged();
        return getDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder() {
        if (dependenciesBuilder_ != null) {
          return dependenciesBuilder_.getMessageOrBuilder();
        } else {
          return dependencies_ == null ?
              tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
        }
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder> 
          getDependenciesFieldBuilder() {
        if (dependenciesBuilder_ == null) {
          dependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder>(
                  getDependencies(),
                  getParentForChildren(),
                  isClean());
          dependencies_ = null;
        }
        return dependenciesBuilder_;
      }

      private java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> asset_ =
        java.util.Collections.emptyList();
      private void ensureAssetIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset>(asset_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder, tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder> assetBuilder_;

      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> getAssetList() {
        if (assetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(asset_);
        } else {
          return assetBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public int getAssetCount() {
        if (assetBuilder_ == null) {
          return asset_.size();
        } else {
          return assetBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset getAsset(int index) {
        if (assetBuilder_ == null) {
          return asset_.get(index);
        } else {
          return assetBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder setAsset(
          int index, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.set(index, value);
          onChanged();
        } else {
          assetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder setAsset(
          int index, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.set(index, builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder addAsset(tools.elide.assets.AssetBundle.StyleBundle.StyleAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.add(value);
          onChanged();
        } else {
          assetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder addAsset(
          int index, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.add(index, value);
          onChanged();
        } else {
          assetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder addAsset(
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.add(builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder addAsset(
          int index, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.add(index, builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder addAllAsset(
          java.lang.Iterable<? extends tools.elide.assets.AssetBundle.StyleBundle.StyleAsset> values) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, asset_);
          onChanged();
        } else {
          assetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder clearAsset() {
        if (assetBuilder_ == null) {
          asset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          assetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public Builder removeAsset(int index) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.remove(index);
          onChanged();
        } else {
          assetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder getAssetBuilder(
          int index) {
        return getAssetFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder getAssetOrBuilder(
          int index) {
        if (assetBuilder_ == null) {
          return asset_.get(index);  } else {
          return assetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public java.util.List<? extends tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder> 
           getAssetOrBuilderList() {
        if (assetBuilder_ != null) {
          return assetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(asset_);
        }
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder addAssetBuilder() {
        return getAssetFieldBuilder().addBuilder(
            tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.getDefaultInstance());
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder addAssetBuilder(
          int index) {
        return getAssetFieldBuilder().addBuilder(
            index, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.getDefaultInstance());
      }
      /**
       * <pre>
       * Stylesheet sources associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.StyleBundle.StyleAsset asset = 4;</code>
       */
      public java.util.List<tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder> 
           getAssetBuilderList() {
        return getAssetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.assets.AssetBundle.StyleBundle.StyleAsset, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder, tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder> 
          getAssetFieldBuilder() {
        if (assetBuilder_ == null) {
          assetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tools.elide.assets.AssetBundle.StyleBundle.StyleAsset, tools.elide.assets.AssetBundle.StyleBundle.StyleAsset.Builder, tools.elide.assets.AssetBundle.StyleBundle.StyleAssetOrBuilder>(
                  asset_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          asset_ = null;
        }
        return assetBuilder_;
      }

      private boolean compressable_ ;
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @return The compressable.
       */
      @java.lang.Override
      public boolean getCompressable() {
        return compressable_;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @param value The compressable to set.
       * @return This builder for chaining.
       */
      public Builder setCompressable(boolean value) {
        
        compressable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompressable() {
        
        compressable_ = false;
        onChanged();
        return this;
      }

      private boolean cacheable_ ;
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @return The cacheable.
       */
      @java.lang.Override
      public boolean getCacheable() {
        return cacheable_;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @param value The cacheable to set.
       * @return This builder for chaining.
       */
      public Builder setCacheable(boolean value) {
        
        cacheable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCacheable() {
        
        cacheable_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.StyleBundle)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.StyleBundle)
    private static final tools.elide.assets.AssetBundle.StyleBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.StyleBundle();
    }

    public static tools.elide.assets.AssetBundle.StyleBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StyleBundle>
        PARSER = new com.google.protobuf.AbstractParser<StyleBundle>() {
      @java.lang.Override
      public StyleBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StyleBundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StyleBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StyleBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.StyleBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScriptBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.ScriptBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Script module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    java.lang.String getModule();
    /**
     * <pre>
     * Script module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    com.google.protobuf.ByteString
        getModuleBytes();

    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> 
        getAssetList();
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getAsset(int index);
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    int getAssetCount();
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    java.util.List<? extends tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder> 
        getAssetOrBuilderList();
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder getAssetOrBuilder(
        int index);

    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return Whether the dependencies field is set.
     */
    boolean hasDependencies();
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return The dependencies.
     */
    tools.elide.assets.AssetBundle.AssetDependencies getDependencies();
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     */
    tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder();

    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 4;</code>
     * @return The compressable.
     */
    boolean getCompressable();

    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 5;</code>
     * @return The cacheable.
     */
    boolean getCacheable();

    /**
     * <pre>
     * Marked if this asset is external, in which case the described script should be referenced via a script tag.
     * </pre>
     *
     * <code>bool external = 6;</code>
     * @return The external.
     */
    boolean getExternal();
  }
  /**
   * <pre>
   * Specifies a bundle of JavaScript code, containing one or more script assets to be included in an HTML page, and
   * optionally settings about how to embed the script.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.ScriptBundle}
   */
  public static final class ScriptBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.ScriptBundle)
      ScriptBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScriptBundle.newBuilder() to construct.
    private ScriptBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScriptBundle() {
      module_ = "";
      asset_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScriptBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScriptBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              module_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset>();
                mutable_bitField0_ |= 0x00000001;
              }
              asset_.add(
                  input.readMessage(tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.parser(), extensionRegistry));
              break;
            }
            case 26: {
              tools.elide.assets.AssetBundle.AssetDependencies.Builder subBuilder = null;
              if (dependencies_ != null) {
                subBuilder = dependencies_.toBuilder();
              }
              dependencies_ = input.readMessage(tools.elide.assets.AssetBundle.AssetDependencies.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dependencies_);
                dependencies_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              compressable_ = input.readBool();
              break;
            }
            case 40: {

              cacheable_ = input.readBool();
              break;
            }
            case 48: {

              external_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          asset_ = java.util.Collections.unmodifiableList(asset_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.ScriptBundle.class, tools.elide.assets.AssetBundle.ScriptBundle.Builder.class);
    }

    public interface ScriptAssetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:assets.AssetBundle.ScriptBundle.ScriptAsset)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The token.
       */
      java.lang.String getToken();
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      com.google.protobuf.ByteString
          getTokenBytes();

      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      java.lang.String getFilename();
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      com.google.protobuf.ByteString
          getFilenameBytes();

      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       * @return Whether the script field is set.
       */
      boolean hasScript();
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       * @return The script.
       */
      tools.elide.page.Context.Scripts.JavaScript getScript();
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       */
      tools.elide.page.Context.Scripts.JavaScriptOrBuilder getScriptOrBuilder();
    }
    /**
     * <pre>
     * Describes the structure of an individual script asset, which is constituent to the bundle that holds it.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.ScriptBundle.ScriptAsset}
     */
    public static final class ScriptAsset extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:assets.AssetBundle.ScriptBundle.ScriptAsset)
        ScriptAssetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ScriptAsset.newBuilder() to construct.
      private ScriptAsset(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ScriptAsset() {
        token_ = "";
        filename_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ScriptAsset();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ScriptAsset(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                token_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                filename_ = s;
                break;
              }
              case 26: {
                tools.elide.page.Context.Scripts.JavaScript.Builder subBuilder = null;
                if (script_ != null) {
                  subBuilder = script_.toBuilder();
                }
                script_ = input.readMessage(tools.elide.page.Context.Scripts.JavaScript.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(script_);
                  script_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_ScriptAsset_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_ScriptAsset_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.class, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder.class);
      }

      public static final int TOKEN_FIELD_NUMBER = 1;
      private volatile java.lang.Object token_;
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Calculated token for this asset, including the asset's content digest.
       * </pre>
       *
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FILENAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object filename_;
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      @java.lang.Override
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filename_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Original name of the source file, if applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCRIPT_FIELD_NUMBER = 3;
      private tools.elide.page.Context.Scripts.JavaScript script_;
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       * @return Whether the script field is set.
       */
      @java.lang.Override
      public boolean hasScript() {
        return script_ != null;
      }
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       * @return The script.
       */
      @java.lang.Override
      public tools.elide.page.Context.Scripts.JavaScript getScript() {
        return script_ == null ? tools.elide.page.Context.Scripts.JavaScript.getDefaultInstance() : script_;
      }
      /**
       * <pre>
       * URL and DOM settings for this asset.
       * </pre>
       *
       * <code>.page.Context.Scripts.JavaScript script = 3;</code>
       */
      @java.lang.Override
      public tools.elide.page.Context.Scripts.JavaScriptOrBuilder getScriptOrBuilder() {
        return getScript();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
        }
        if (script_ != null) {
          output.writeMessage(3, getScript());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
        }
        if (script_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getScript());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset)) {
          return super.equals(obj);
        }
        tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset other = (tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset) obj;

        if (!getToken()
            .equals(other.getToken())) return false;
        if (!getFilename()
            .equals(other.getFilename())) return false;
        if (hasScript() != other.hasScript()) return false;
        if (hasScript()) {
          if (!getScript()
              .equals(other.getScript())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getToken().hashCode();
        hash = (37 * hash) + FILENAME_FIELD_NUMBER;
        hash = (53 * hash) + getFilename().hashCode();
        if (hasScript()) {
          hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
          hash = (53 * hash) + getScript().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Describes the structure of an individual script asset, which is constituent to the bundle that holds it.
       * </pre>
       *
       * Protobuf type {@code assets.AssetBundle.ScriptBundle.ScriptAsset}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:assets.AssetBundle.ScriptBundle.ScriptAsset)
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_ScriptAsset_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_ScriptAsset_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.class, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder.class);
        }

        // Construct using tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          token_ = "";

          filename_ = "";

          if (scriptBuilder_ == null) {
            script_ = null;
          } else {
            script_ = null;
            scriptBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_ScriptAsset_descriptor;
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getDefaultInstanceForType() {
          return tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.getDefaultInstance();
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset build() {
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset buildPartial() {
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset result = new tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset(this);
          result.token_ = token_;
          result.filename_ = filename_;
          if (scriptBuilder_ == null) {
            result.script_ = script_;
          } else {
            result.script_ = scriptBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset) {
            return mergeFrom((tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset other) {
          if (other == tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.getDefaultInstance()) return this;
          if (!other.getToken().isEmpty()) {
            token_ = other.token_;
            onChanged();
          }
          if (!other.getFilename().isEmpty()) {
            filename_ = other.filename_;
            onChanged();
          }
          if (other.hasScript()) {
            mergeScript(other.getScript());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object token_ = "";
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return The token.
         */
        public java.lang.String getToken() {
          java.lang.Object ref = token_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            token_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return The bytes for token.
         */
        public com.google.protobuf.ByteString
            getTokenBytes() {
          java.lang.Object ref = token_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            token_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          token_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          
          token_ = getDefaultInstance().getToken();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculated token for this asset, including the asset's content digest.
         * </pre>
         *
         * <code>string token = 1;</code>
         * @param value The bytes for token to set.
         * @return This builder for chaining.
         */
        public Builder setTokenBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          token_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object filename_ = "";
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return The filename.
         */
        public java.lang.String getFilename() {
          java.lang.Object ref = filename_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            filename_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return The bytes for filename.
         */
        public com.google.protobuf.ByteString
            getFilenameBytes() {
          java.lang.Object ref = filename_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            filename_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @param value The filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilename(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          filename_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFilename() {
          
          filename_ = getDefaultInstance().getFilename();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Original name of the source file, if applicable.
         * </pre>
         *
         * <code>string filename = 2;</code>
         * @param value The bytes for filename to set.
         * @return This builder for chaining.
         */
        public Builder setFilenameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          filename_ = value;
          onChanged();
          return this;
        }

        private tools.elide.page.Context.Scripts.JavaScript script_;
        private com.google.protobuf.SingleFieldBuilderV3<
            tools.elide.page.Context.Scripts.JavaScript, tools.elide.page.Context.Scripts.JavaScript.Builder, tools.elide.page.Context.Scripts.JavaScriptOrBuilder> scriptBuilder_;
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         * @return Whether the script field is set.
         */
        public boolean hasScript() {
          return scriptBuilder_ != null || script_ != null;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         * @return The script.
         */
        public tools.elide.page.Context.Scripts.JavaScript getScript() {
          if (scriptBuilder_ == null) {
            return script_ == null ? tools.elide.page.Context.Scripts.JavaScript.getDefaultInstance() : script_;
          } else {
            return scriptBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public Builder setScript(tools.elide.page.Context.Scripts.JavaScript value) {
          if (scriptBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            script_ = value;
            onChanged();
          } else {
            scriptBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public Builder setScript(
            tools.elide.page.Context.Scripts.JavaScript.Builder builderForValue) {
          if (scriptBuilder_ == null) {
            script_ = builderForValue.build();
            onChanged();
          } else {
            scriptBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public Builder mergeScript(tools.elide.page.Context.Scripts.JavaScript value) {
          if (scriptBuilder_ == null) {
            if (script_ != null) {
              script_ =
                tools.elide.page.Context.Scripts.JavaScript.newBuilder(script_).mergeFrom(value).buildPartial();
            } else {
              script_ = value;
            }
            onChanged();
          } else {
            scriptBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public Builder clearScript() {
          if (scriptBuilder_ == null) {
            script_ = null;
            onChanged();
          } else {
            script_ = null;
            scriptBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public tools.elide.page.Context.Scripts.JavaScript.Builder getScriptBuilder() {
          
          onChanged();
          return getScriptFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        public tools.elide.page.Context.Scripts.JavaScriptOrBuilder getScriptOrBuilder() {
          if (scriptBuilder_ != null) {
            return scriptBuilder_.getMessageOrBuilder();
          } else {
            return script_ == null ?
                tools.elide.page.Context.Scripts.JavaScript.getDefaultInstance() : script_;
          }
        }
        /**
         * <pre>
         * URL and DOM settings for this asset.
         * </pre>
         *
         * <code>.page.Context.Scripts.JavaScript script = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tools.elide.page.Context.Scripts.JavaScript, tools.elide.page.Context.Scripts.JavaScript.Builder, tools.elide.page.Context.Scripts.JavaScriptOrBuilder> 
            getScriptFieldBuilder() {
          if (scriptBuilder_ == null) {
            scriptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tools.elide.page.Context.Scripts.JavaScript, tools.elide.page.Context.Scripts.JavaScript.Builder, tools.elide.page.Context.Scripts.JavaScriptOrBuilder>(
                    getScript(),
                    getParentForChildren(),
                    isClean());
            script_ = null;
          }
          return scriptBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:assets.AssetBundle.ScriptBundle.ScriptAsset)
      }

      // @@protoc_insertion_point(class_scope:assets.AssetBundle.ScriptBundle.ScriptAsset)
      private static final tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset();
      }

      public static tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ScriptAsset>
          PARSER = new com.google.protobuf.AbstractParser<ScriptAsset>() {
        @java.lang.Override
        public ScriptAsset parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ScriptAsset(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ScriptAsset> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ScriptAsset> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MODULE_FIELD_NUMBER = 1;
    private volatile java.lang.Object module_;
    /**
     * <pre>
     * Script module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    @java.lang.Override
    public java.lang.String getModule() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        module_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Script module name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModuleBytes() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        module_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ASSET_FIELD_NUMBER = 2;
    private java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> asset_;
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    @java.lang.Override
    public java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> getAssetList() {
      return asset_;
    }
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder> 
        getAssetOrBuilderList() {
      return asset_;
    }
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    @java.lang.Override
    public int getAssetCount() {
      return asset_.size();
    }
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getAsset(int index) {
      return asset_.get(index);
    }
    /**
     * <pre>
     * Script code assets associated with this bundle. Always non-empty.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder getAssetOrBuilder(
        int index) {
      return asset_.get(index);
    }

    public static final int DEPENDENCIES_FIELD_NUMBER = 3;
    private tools.elide.assets.AssetBundle.AssetDependencies dependencies_;
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return Whether the dependencies field is set.
     */
    @java.lang.Override
    public boolean hasDependencies() {
      return dependencies_ != null;
    }
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     * @return The dependencies.
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetDependencies getDependencies() {
      return dependencies_ == null ? tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
    }
    /**
     * <pre>
     * Specifies dependencies that must be loaded before this module, if any.
     * </pre>
     *
     * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
     */
    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder() {
      return getDependencies();
    }

    public static final int COMPRESSABLE_FIELD_NUMBER = 4;
    private boolean compressable_;
    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 4;</code>
     * @return The compressable.
     */
    @java.lang.Override
    public boolean getCompressable() {
      return compressable_;
    }

    public static final int CACHEABLE_FIELD_NUMBER = 5;
    private boolean cacheable_;
    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 5;</code>
     * @return The cacheable.
     */
    @java.lang.Override
    public boolean getCacheable() {
      return cacheable_;
    }

    public static final int EXTERNAL_FIELD_NUMBER = 6;
    private boolean external_;
    /**
     * <pre>
     * Marked if this asset is external, in which case the described script should be referenced via a script tag.
     * </pre>
     *
     * <code>bool external = 6;</code>
     * @return The external.
     */
    @java.lang.Override
    public boolean getExternal() {
      return external_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, module_);
      }
      for (int i = 0; i < asset_.size(); i++) {
        output.writeMessage(2, asset_.get(i));
      }
      if (dependencies_ != null) {
        output.writeMessage(3, getDependencies());
      }
      if (compressable_ != false) {
        output.writeBool(4, compressable_);
      }
      if (cacheable_ != false) {
        output.writeBool(5, cacheable_);
      }
      if (external_ != false) {
        output.writeBool(6, external_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, module_);
      }
      for (int i = 0; i < asset_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, asset_.get(i));
      }
      if (dependencies_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDependencies());
      }
      if (compressable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, compressable_);
      }
      if (cacheable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, cacheable_);
      }
      if (external_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, external_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.ScriptBundle)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.ScriptBundle other = (tools.elide.assets.AssetBundle.ScriptBundle) obj;

      if (!getModule()
          .equals(other.getModule())) return false;
      if (!getAssetList()
          .equals(other.getAssetList())) return false;
      if (hasDependencies() != other.hasDependencies()) return false;
      if (hasDependencies()) {
        if (!getDependencies()
            .equals(other.getDependencies())) return false;
      }
      if (getCompressable()
          != other.getCompressable()) return false;
      if (getCacheable()
          != other.getCacheable()) return false;
      if (getExternal()
          != other.getExternal()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODULE_FIELD_NUMBER;
      hash = (53 * hash) + getModule().hashCode();
      if (getAssetCount() > 0) {
        hash = (37 * hash) + ASSET_FIELD_NUMBER;
        hash = (53 * hash) + getAssetList().hashCode();
      }
      if (hasDependencies()) {
        hash = (37 * hash) + DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getDependencies().hashCode();
      }
      hash = (37 * hash) + COMPRESSABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompressable());
      hash = (37 * hash) + CACHEABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCacheable());
      hash = (37 * hash) + EXTERNAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getExternal());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.ScriptBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.ScriptBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a bundle of JavaScript code, containing one or more script assets to be included in an HTML page, and
     * optionally settings about how to embed the script.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.ScriptBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.ScriptBundle)
        tools.elide.assets.AssetBundle.ScriptBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.ScriptBundle.class, tools.elide.assets.AssetBundle.ScriptBundle.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.ScriptBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAssetFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        module_ = "";

        if (assetBuilder_ == null) {
          asset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          assetBuilder_.clear();
        }
        if (dependenciesBuilder_ == null) {
          dependencies_ = null;
        } else {
          dependencies_ = null;
          dependenciesBuilder_ = null;
        }
        compressable_ = false;

        cacheable_ = false;

        external_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptBundle_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.ScriptBundle getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.ScriptBundle.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.ScriptBundle build() {
        tools.elide.assets.AssetBundle.ScriptBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.ScriptBundle buildPartial() {
        tools.elide.assets.AssetBundle.ScriptBundle result = new tools.elide.assets.AssetBundle.ScriptBundle(this);
        int from_bitField0_ = bitField0_;
        result.module_ = module_;
        if (assetBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            asset_ = java.util.Collections.unmodifiableList(asset_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.asset_ = asset_;
        } else {
          result.asset_ = assetBuilder_.build();
        }
        if (dependenciesBuilder_ == null) {
          result.dependencies_ = dependencies_;
        } else {
          result.dependencies_ = dependenciesBuilder_.build();
        }
        result.compressable_ = compressable_;
        result.cacheable_ = cacheable_;
        result.external_ = external_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.ScriptBundle) {
          return mergeFrom((tools.elide.assets.AssetBundle.ScriptBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.ScriptBundle other) {
        if (other == tools.elide.assets.AssetBundle.ScriptBundle.getDefaultInstance()) return this;
        if (!other.getModule().isEmpty()) {
          module_ = other.module_;
          onChanged();
        }
        if (assetBuilder_ == null) {
          if (!other.asset_.isEmpty()) {
            if (asset_.isEmpty()) {
              asset_ = other.asset_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAssetIsMutable();
              asset_.addAll(other.asset_);
            }
            onChanged();
          }
        } else {
          if (!other.asset_.isEmpty()) {
            if (assetBuilder_.isEmpty()) {
              assetBuilder_.dispose();
              assetBuilder_ = null;
              asset_ = other.asset_;
              bitField0_ = (bitField0_ & ~0x00000001);
              assetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAssetFieldBuilder() : null;
            } else {
              assetBuilder_.addAllMessages(other.asset_);
            }
          }
        }
        if (other.hasDependencies()) {
          mergeDependencies(other.getDependencies());
        }
        if (other.getCompressable() != false) {
          setCompressable(other.getCompressable());
        }
        if (other.getCacheable() != false) {
          setCacheable(other.getCacheable());
        }
        if (other.getExternal() != false) {
          setExternal(other.getExternal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.ScriptBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.ScriptBundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object module_ = "";
      /**
       * <pre>
       * Script module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The module.
       */
      public java.lang.String getModule() {
        java.lang.Object ref = module_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          module_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Script module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The bytes for module.
       */
      public com.google.protobuf.ByteString
          getModuleBytes() {
        java.lang.Object ref = module_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          module_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Script module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The module to set.
       * @return This builder for chaining.
       */
      public Builder setModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        module_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Script module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearModule() {
        
        module_ = getDefaultInstance().getModule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Script module name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The bytes for module to set.
       * @return This builder for chaining.
       */
      public Builder setModuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        module_ = value;
        onChanged();
        return this;
      }

      private java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> asset_ =
        java.util.Collections.emptyList();
      private void ensureAssetIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset>(asset_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder> assetBuilder_;

      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> getAssetList() {
        if (assetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(asset_);
        } else {
          return assetBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public int getAssetCount() {
        if (assetBuilder_ == null) {
          return asset_.size();
        } else {
          return assetBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset getAsset(int index) {
        if (assetBuilder_ == null) {
          return asset_.get(index);
        } else {
          return assetBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder setAsset(
          int index, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.set(index, value);
          onChanged();
        } else {
          assetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder setAsset(
          int index, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.set(index, builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder addAsset(tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.add(value);
          onChanged();
        } else {
          assetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder addAsset(
          int index, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset value) {
        if (assetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAssetIsMutable();
          asset_.add(index, value);
          onChanged();
        } else {
          assetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder addAsset(
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.add(builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder addAsset(
          int index, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder builderForValue) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.add(index, builderForValue.build());
          onChanged();
        } else {
          assetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder addAllAsset(
          java.lang.Iterable<? extends tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset> values) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, asset_);
          onChanged();
        } else {
          assetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder clearAsset() {
        if (assetBuilder_ == null) {
          asset_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          assetBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public Builder removeAsset(int index) {
        if (assetBuilder_ == null) {
          ensureAssetIsMutable();
          asset_.remove(index);
          onChanged();
        } else {
          assetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder getAssetBuilder(
          int index) {
        return getAssetFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder getAssetOrBuilder(
          int index) {
        if (assetBuilder_ == null) {
          return asset_.get(index);  } else {
          return assetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public java.util.List<? extends tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder> 
           getAssetOrBuilderList() {
        if (assetBuilder_ != null) {
          return assetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(asset_);
        }
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder addAssetBuilder() {
        return getAssetFieldBuilder().addBuilder(
            tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.getDefaultInstance());
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder addAssetBuilder(
          int index) {
        return getAssetFieldBuilder().addBuilder(
            index, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.getDefaultInstance());
      }
      /**
       * <pre>
       * Script code assets associated with this bundle. Always non-empty.
       * </pre>
       *
       * <code>repeated .assets.AssetBundle.ScriptBundle.ScriptAsset asset = 2;</code>
       */
      public java.util.List<tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder> 
           getAssetBuilderList() {
        return getAssetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder> 
          getAssetFieldBuilder() {
        if (assetBuilder_ == null) {
          assetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAsset.Builder, tools.elide.assets.AssetBundle.ScriptBundle.ScriptAssetOrBuilder>(
                  asset_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          asset_ = null;
        }
        return assetBuilder_;
      }

      private tools.elide.assets.AssetBundle.AssetDependencies dependencies_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder> dependenciesBuilder_;
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       * @return Whether the dependencies field is set.
       */
      public boolean hasDependencies() {
        return dependenciesBuilder_ != null || dependencies_ != null;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       * @return The dependencies.
       */
      public tools.elide.assets.AssetBundle.AssetDependencies getDependencies() {
        if (dependenciesBuilder_ == null) {
          return dependencies_ == null ? tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
        } else {
          return dependenciesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder setDependencies(tools.elide.assets.AssetBundle.AssetDependencies value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dependencies_ = value;
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder setDependencies(
          tools.elide.assets.AssetBundle.AssetDependencies.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          dependencies_ = builderForValue.build();
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder mergeDependencies(tools.elide.assets.AssetBundle.AssetDependencies value) {
        if (dependenciesBuilder_ == null) {
          if (dependencies_ != null) {
            dependencies_ =
              tools.elide.assets.AssetBundle.AssetDependencies.newBuilder(dependencies_).mergeFrom(value).buildPartial();
          } else {
            dependencies_ = value;
          }
          onChanged();
        } else {
          dependenciesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public Builder clearDependencies() {
        if (dependenciesBuilder_ == null) {
          dependencies_ = null;
          onChanged();
        } else {
          dependencies_ = null;
          dependenciesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public tools.elide.assets.AssetBundle.AssetDependencies.Builder getDependenciesBuilder() {
        
        onChanged();
        return getDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      public tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder getDependenciesOrBuilder() {
        if (dependenciesBuilder_ != null) {
          return dependenciesBuilder_.getMessageOrBuilder();
        } else {
          return dependencies_ == null ?
              tools.elide.assets.AssetBundle.AssetDependencies.getDefaultInstance() : dependencies_;
        }
      }
      /**
       * <pre>
       * Specifies dependencies that must be loaded before this module, if any.
       * </pre>
       *
       * <code>.assets.AssetBundle.AssetDependencies dependencies = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder> 
          getDependenciesFieldBuilder() {
        if (dependenciesBuilder_ == null) {
          dependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tools.elide.assets.AssetBundle.AssetDependencies, tools.elide.assets.AssetBundle.AssetDependencies.Builder, tools.elide.assets.AssetBundle.AssetDependenciesOrBuilder>(
                  getDependencies(),
                  getParentForChildren(),
                  isClean());
          dependencies_ = null;
        }
        return dependenciesBuilder_;
      }

      private boolean compressable_ ;
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 4;</code>
       * @return The compressable.
       */
      @java.lang.Override
      public boolean getCompressable() {
        return compressable_;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 4;</code>
       * @param value The compressable to set.
       * @return This builder for chaining.
       */
      public Builder setCompressable(boolean value) {
        
        compressable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompressable() {
        
        compressable_ = false;
        onChanged();
        return this;
      }

      private boolean cacheable_ ;
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 5;</code>
       * @return The cacheable.
       */
      @java.lang.Override
      public boolean getCacheable() {
        return cacheable_;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 5;</code>
       * @param value The cacheable to set.
       * @return This builder for chaining.
       */
      public Builder setCacheable(boolean value) {
        
        cacheable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCacheable() {
        
        cacheable_ = false;
        onChanged();
        return this;
      }

      private boolean external_ ;
      /**
       * <pre>
       * Marked if this asset is external, in which case the described script should be referenced via a script tag.
       * </pre>
       *
       * <code>bool external = 6;</code>
       * @return The external.
       */
      @java.lang.Override
      public boolean getExternal() {
        return external_;
      }
      /**
       * <pre>
       * Marked if this asset is external, in which case the described script should be referenced via a script tag.
       * </pre>
       *
       * <code>bool external = 6;</code>
       * @param value The external to set.
       * @return This builder for chaining.
       */
      public Builder setExternal(boolean value) {
        
        external_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Marked if this asset is external, in which case the described script should be referenced via a script tag.
       * </pre>
       *
       * <code>bool external = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternal() {
        
        external_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.ScriptBundle)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.ScriptBundle)
    private static final tools.elide.assets.AssetBundle.ScriptBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.ScriptBundle();
    }

    public static tools.elide.assets.AssetBundle.ScriptBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScriptBundle>
        PARSER = new com.google.protobuf.AbstractParser<ScriptBundle>() {
      @java.lang.Override
      public ScriptBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScriptBundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScriptBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScriptBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.ScriptBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GenericBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.GenericBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Generic asset name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    java.lang.String getModule();
    /**
     * <pre>
     * Generic asset name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    com.google.protobuf.ByteString
        getModuleBytes();

    /**
     * <pre>
     * Original name of the source file, as applicable.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The filename.
     */
    java.lang.String getFilename();
    /**
     * <pre>
     * Original name of the source file, as applicable.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The bytes for filename.
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    java.util.List<tools.elide.data.CompressedData> 
        getVariantList();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    tools.elide.data.CompressedData getVariant(int index);
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    int getVariantCount();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
        getVariantOrBuilderList();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
        int index);

    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 5;</code>
     * @return The compressable.
     */
    boolean getCompressable();

    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 6;</code>
     * @return The cacheable.
     */
    boolean getCacheable();

    /**
     * <pre>
     * Marked if this asset is external, in which case the described stylesheet should be referenced via a link tag.
     * </pre>
     *
     * <code>bool external = 7;</code>
     * @return The external.
     */
    boolean getExternal();
  }
  /**
   * <pre>
   * Describes a generic asset bundle relating to a text asset, or some other generic asset which is otherwise not
   * modeled by other available descriptors.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.GenericBundle}
   */
  public static final class GenericBundle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.GenericBundle)
      GenericBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenericBundle.newBuilder() to construct.
    private GenericBundle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenericBundle() {
      module_ = "";
      filename_ = "";
      token_ = "";
      variant_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenericBundle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GenericBundle(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              module_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              filename_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                variant_ = new java.util.ArrayList<tools.elide.data.CompressedData>();
                mutable_bitField0_ |= 0x00000001;
              }
              variant_.add(
                  input.readMessage(tools.elide.data.CompressedData.parser(), extensionRegistry));
              break;
            }
            case 40: {

              compressable_ = input.readBool();
              break;
            }
            case 48: {

              cacheable_ = input.readBool();
              break;
            }
            case 56: {

              external_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          variant_ = java.util.Collections.unmodifiableList(variant_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.GenericBundle.class, tools.elide.assets.AssetBundle.GenericBundle.Builder.class);
    }

    public static final int MODULE_FIELD_NUMBER = 1;
    private volatile java.lang.Object module_;
    /**
     * <pre>
     * Generic asset name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    @java.lang.Override
    public java.lang.String getModule() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        module_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Generic asset name/path.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModuleBytes() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        module_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object filename_;
    /**
     * <pre>
     * Original name of the source file, as applicable.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The filename.
     */
    @java.lang.Override
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filename_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Original name of the source file, as applicable.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The bytes for filename.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_FIELD_NUMBER = 3;
    private volatile java.lang.Object token_;
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_FIELD_NUMBER = 4;
    private java.util.List<tools.elide.data.CompressedData> variant_;
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public java.util.List<tools.elide.data.CompressedData> getVariantList() {
      return variant_;
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
        getVariantOrBuilderList() {
      return variant_;
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public int getVariantCount() {
      return variant_.size();
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public tools.elide.data.CompressedData getVariant(int index) {
      return variant_.get(index);
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
        int index) {
      return variant_.get(index);
    }

    public static final int COMPRESSABLE_FIELD_NUMBER = 5;
    private boolean compressable_;
    /**
     * <pre>
     * Whether this asset should be compressed when serving to end-users.
     * </pre>
     *
     * <code>bool compressable = 5;</code>
     * @return The compressable.
     */
    @java.lang.Override
    public boolean getCompressable() {
      return compressable_;
    }

    public static final int CACHEABLE_FIELD_NUMBER = 6;
    private boolean cacheable_;
    /**
     * <pre>
     * Whether this asset should be considered cacheable.
     * </pre>
     *
     * <code>bool cacheable = 6;</code>
     * @return The cacheable.
     */
    @java.lang.Override
    public boolean getCacheable() {
      return cacheable_;
    }

    public static final int EXTERNAL_FIELD_NUMBER = 7;
    private boolean external_;
    /**
     * <pre>
     * Marked if this asset is external, in which case the described stylesheet should be referenced via a link tag.
     * </pre>
     *
     * <code>bool external = 7;</code>
     * @return The external.
     */
    @java.lang.Override
    public boolean getExternal() {
      return external_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, module_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, token_);
      }
      for (int i = 0; i < variant_.size(); i++) {
        output.writeMessage(4, variant_.get(i));
      }
      if (compressable_ != false) {
        output.writeBool(5, compressable_);
      }
      if (cacheable_ != false) {
        output.writeBool(6, cacheable_);
      }
      if (external_ != false) {
        output.writeBool(7, external_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, module_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, token_);
      }
      for (int i = 0; i < variant_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, variant_.get(i));
      }
      if (compressable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, compressable_);
      }
      if (cacheable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, cacheable_);
      }
      if (external_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, external_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.GenericBundle)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.GenericBundle other = (tools.elide.assets.AssetBundle.GenericBundle) obj;

      if (!getModule()
          .equals(other.getModule())) return false;
      if (!getFilename()
          .equals(other.getFilename())) return false;
      if (!getToken()
          .equals(other.getToken())) return false;
      if (!getVariantList()
          .equals(other.getVariantList())) return false;
      if (getCompressable()
          != other.getCompressable()) return false;
      if (getCacheable()
          != other.getCacheable()) return false;
      if (getExternal()
          != other.getExternal()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODULE_FIELD_NUMBER;
      hash = (53 * hash) + getModule().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFilename().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (getVariantCount() > 0) {
        hash = (37 * hash) + VARIANT_FIELD_NUMBER;
        hash = (53 * hash) + getVariantList().hashCode();
      }
      hash = (37 * hash) + COMPRESSABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompressable());
      hash = (37 * hash) + CACHEABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCacheable());
      hash = (37 * hash) + EXTERNAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getExternal());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.GenericBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.GenericBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a generic asset bundle relating to a text asset, or some other generic asset which is otherwise not
     * modeled by other available descriptors.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.GenericBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.GenericBundle)
        tools.elide.assets.AssetBundle.GenericBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.GenericBundle.class, tools.elide.assets.AssetBundle.GenericBundle.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.GenericBundle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVariantFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        module_ = "";

        filename_ = "";

        token_ = "";

        if (variantBuilder_ == null) {
          variant_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variantBuilder_.clear();
        }
        compressable_ = false;

        cacheable_ = false;

        external_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericBundle_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.GenericBundle getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.GenericBundle.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.GenericBundle build() {
        tools.elide.assets.AssetBundle.GenericBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.GenericBundle buildPartial() {
        tools.elide.assets.AssetBundle.GenericBundle result = new tools.elide.assets.AssetBundle.GenericBundle(this);
        int from_bitField0_ = bitField0_;
        result.module_ = module_;
        result.filename_ = filename_;
        result.token_ = token_;
        if (variantBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            variant_ = java.util.Collections.unmodifiableList(variant_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variant_ = variant_;
        } else {
          result.variant_ = variantBuilder_.build();
        }
        result.compressable_ = compressable_;
        result.cacheable_ = cacheable_;
        result.external_ = external_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.GenericBundle) {
          return mergeFrom((tools.elide.assets.AssetBundle.GenericBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.GenericBundle other) {
        if (other == tools.elide.assets.AssetBundle.GenericBundle.getDefaultInstance()) return this;
        if (!other.getModule().isEmpty()) {
          module_ = other.module_;
          onChanged();
        }
        if (!other.getFilename().isEmpty()) {
          filename_ = other.filename_;
          onChanged();
        }
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (variantBuilder_ == null) {
          if (!other.variant_.isEmpty()) {
            if (variant_.isEmpty()) {
              variant_ = other.variant_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariantIsMutable();
              variant_.addAll(other.variant_);
            }
            onChanged();
          }
        } else {
          if (!other.variant_.isEmpty()) {
            if (variantBuilder_.isEmpty()) {
              variantBuilder_.dispose();
              variantBuilder_ = null;
              variant_ = other.variant_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variantBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVariantFieldBuilder() : null;
            } else {
              variantBuilder_.addAllMessages(other.variant_);
            }
          }
        }
        if (other.getCompressable() != false) {
          setCompressable(other.getCompressable());
        }
        if (other.getCacheable() != false) {
          setCacheable(other.getCacheable());
        }
        if (other.getExternal() != false) {
          setExternal(other.getExternal());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.GenericBundle parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.GenericBundle) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object module_ = "";
      /**
       * <pre>
       * Generic asset name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The module.
       */
      public java.lang.String getModule() {
        java.lang.Object ref = module_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          module_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Generic asset name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The bytes for module.
       */
      public com.google.protobuf.ByteString
          getModuleBytes() {
        java.lang.Object ref = module_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          module_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Generic asset name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The module to set.
       * @return This builder for chaining.
       */
      public Builder setModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        module_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Generic asset name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearModule() {
        
        module_ = getDefaultInstance().getModule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Generic asset name/path.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The bytes for module to set.
       * @return This builder for chaining.
       */
      public Builder setModuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        module_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <pre>
       * Original name of the source file, as applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Original name of the source file, as applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Original name of the source file, as applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @param value The filename to set.
       * @return This builder for chaining.
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original name of the source file, as applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilename() {
        
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original name of the source file, as applicable.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @param value The bytes for filename to set.
       * @return This builder for chaining.
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object token_ = "";
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return The token.
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return The bytes for token.
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private java.util.List<tools.elide.data.CompressedData> variant_ =
        java.util.Collections.emptyList();
      private void ensureVariantIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          variant_ = new java.util.ArrayList<tools.elide.data.CompressedData>(variant_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder> variantBuilder_;

      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<tools.elide.data.CompressedData> getVariantList() {
        if (variantBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variant_);
        } else {
          return variantBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public int getVariantCount() {
        if (variantBuilder_ == null) {
          return variant_.size();
        } else {
          return variantBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData getVariant(int index) {
        if (variantBuilder_ == null) {
          return variant_.get(index);
        } else {
          return variantBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder setVariant(
          int index, tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.set(index, value);
          onChanged();
        } else {
          variantBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder setVariant(
          int index, tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.add(value);
          onChanged();
        } else {
          variantBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          int index, tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.add(index, value);
          onChanged();
        } else {
          variantBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.add(builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          int index, tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addAllVariant(
          java.lang.Iterable<? extends tools.elide.data.CompressedData> values) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variant_);
          onChanged();
        } else {
          variantBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder clearVariant() {
        if (variantBuilder_ == null) {
          variant_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variantBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder removeVariant(int index) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.remove(index);
          onChanged();
        } else {
          variantBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder getVariantBuilder(
          int index) {
        return getVariantFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
          int index) {
        if (variantBuilder_ == null) {
          return variant_.get(index);  } else {
          return variantBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
           getVariantOrBuilderList() {
        if (variantBuilder_ != null) {
          return variantBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variant_);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder addVariantBuilder() {
        return getVariantFieldBuilder().addBuilder(
            tools.elide.data.CompressedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder addVariantBuilder(
          int index) {
        return getVariantFieldBuilder().addBuilder(
            index, tools.elide.data.CompressedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<tools.elide.data.CompressedData.Builder> 
           getVariantBuilderList() {
        return getVariantFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder> 
          getVariantFieldBuilder() {
        if (variantBuilder_ == null) {
          variantBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder>(
                  variant_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        return variantBuilder_;
      }

      private boolean compressable_ ;
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @return The compressable.
       */
      @java.lang.Override
      public boolean getCompressable() {
        return compressable_;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @param value The compressable to set.
       * @return This builder for chaining.
       */
      public Builder setCompressable(boolean value) {
        
        compressable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be compressed when serving to end-users.
       * </pre>
       *
       * <code>bool compressable = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompressable() {
        
        compressable_ = false;
        onChanged();
        return this;
      }

      private boolean cacheable_ ;
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @return The cacheable.
       */
      @java.lang.Override
      public boolean getCacheable() {
        return cacheable_;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @param value The cacheable to set.
       * @return This builder for chaining.
       */
      public Builder setCacheable(boolean value) {
        
        cacheable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this asset should be considered cacheable.
       * </pre>
       *
       * <code>bool cacheable = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCacheable() {
        
        cacheable_ = false;
        onChanged();
        return this;
      }

      private boolean external_ ;
      /**
       * <pre>
       * Marked if this asset is external, in which case the described stylesheet should be referenced via a link tag.
       * </pre>
       *
       * <code>bool external = 7;</code>
       * @return The external.
       */
      @java.lang.Override
      public boolean getExternal() {
        return external_;
      }
      /**
       * <pre>
       * Marked if this asset is external, in which case the described stylesheet should be referenced via a link tag.
       * </pre>
       *
       * <code>bool external = 7;</code>
       * @param value The external to set.
       * @return This builder for chaining.
       */
      public Builder setExternal(boolean value) {
        
        external_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Marked if this asset is external, in which case the described stylesheet should be referenced via a link tag.
       * </pre>
       *
       * <code>bool external = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearExternal() {
        
        external_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.GenericBundle)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.GenericBundle)
    private static final tools.elide.assets.AssetBundle.GenericBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.GenericBundle();
    }

    public static tools.elide.assets.AssetBundle.GenericBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenericBundle>
        PARSER = new com.google.protobuf.AbstractParser<GenericBundle>() {
      @java.lang.Override
      public GenericBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GenericBundle(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GenericBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenericBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.GenericBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AssetContentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:assets.AssetBundle.AssetContent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Module which this asset is a member of.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    java.lang.String getModule();
    /**
     * <pre>
     * Module which this asset is a member of.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    com.google.protobuf.ByteString
        getModuleBytes();

    /**
     * <pre>
     * Original name of the source file.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The filename.
     */
    java.lang.String getFilename();
    /**
     * <pre>
     * Original name of the source file.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The bytes for filename.
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    java.util.List<tools.elide.data.CompressedData> 
        getVariantList();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    tools.elide.data.CompressedData getVariant(int index);
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    int getVariantCount();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
        getVariantOrBuilderList();
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Specifies full contents for assets, in pre-compressed forms, to be served directly when a compressed representation
   * is supported by the invoking browser. These payloads duplicate the original content, which is additionally enclosed
   * in the JAR at the path described in this structure.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle.AssetContent}
   */
  public static final class AssetContent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:assets.AssetBundle.AssetContent)
      AssetContentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AssetContent.newBuilder() to construct.
    private AssetContent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AssetContent() {
      module_ = "";
      filename_ = "";
      token_ = "";
      variant_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AssetContent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AssetContent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              module_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              filename_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                variant_ = new java.util.ArrayList<tools.elide.data.CompressedData>();
                mutable_bitField0_ |= 0x00000001;
              }
              variant_.add(
                  input.readMessage(tools.elide.data.CompressedData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          variant_ = java.util.Collections.unmodifiableList(variant_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetContent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetContent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.AssetContent.class, tools.elide.assets.AssetBundle.AssetContent.Builder.class);
    }

    public static final int MODULE_FIELD_NUMBER = 1;
    private volatile java.lang.Object module_;
    /**
     * <pre>
     * Module which this asset is a member of.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The module.
     */
    @java.lang.Override
    public java.lang.String getModule() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        module_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Module which this asset is a member of.
     * </pre>
     *
     * <code>string module = 1;</code>
     * @return The bytes for module.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModuleBytes() {
      java.lang.Object ref = module_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        module_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object filename_;
    /**
     * <pre>
     * Original name of the source file.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The filename.
     */
    @java.lang.Override
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filename_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Original name of the source file.
     * </pre>
     *
     * <code>string filename = 2;</code>
     * @return The bytes for filename.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_FIELD_NUMBER = 3;
    private volatile java.lang.Object token_;
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Hash token uniquely identifying the content in this module.
     * </pre>
     *
     * <code>string token = 3;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANT_FIELD_NUMBER = 4;
    private java.util.List<tools.elide.data.CompressedData> variant_;
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public java.util.List<tools.elide.data.CompressedData> getVariantList() {
      return variant_;
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
        getVariantOrBuilderList() {
      return variant_;
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public int getVariantCount() {
      return variant_.size();
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public tools.elide.data.CompressedData getVariant(int index) {
      return variant_.get(index);
    }
    /**
     * <pre>
     * Specifies each variant of an asset's main content.
     * </pre>
     *
     * <code>repeated .data.CompressedData variant = 4;</code>
     */
    @java.lang.Override
    public tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
        int index) {
      return variant_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, module_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filename_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, token_);
      }
      for (int i = 0; i < variant_.size(); i++) {
        output.writeMessage(4, variant_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(module_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, module_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filename_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filename_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(token_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, token_);
      }
      for (int i = 0; i < variant_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, variant_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tools.elide.assets.AssetBundle.AssetContent)) {
        return super.equals(obj);
      }
      tools.elide.assets.AssetBundle.AssetContent other = (tools.elide.assets.AssetBundle.AssetContent) obj;

      if (!getModule()
          .equals(other.getModule())) return false;
      if (!getFilename()
          .equals(other.getFilename())) return false;
      if (!getToken()
          .equals(other.getToken())) return false;
      if (!getVariantList()
          .equals(other.getVariantList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODULE_FIELD_NUMBER;
      hash = (53 * hash) + getModule().hashCode();
      hash = (37 * hash) + FILENAME_FIELD_NUMBER;
      hash = (53 * hash) + getFilename().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (getVariantCount() > 0) {
        hash = (37 * hash) + VARIANT_FIELD_NUMBER;
        hash = (53 * hash) + getVariantList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tools.elide.assets.AssetBundle.AssetContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tools.elide.assets.AssetBundle.AssetContent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies full contents for assets, in pre-compressed forms, to be served directly when a compressed representation
     * is supported by the invoking browser. These payloads duplicate the original content, which is additionally enclosed
     * in the JAR at the path described in this structure.
     * </pre>
     *
     * Protobuf type {@code assets.AssetBundle.AssetContent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:assets.AssetBundle.AssetContent)
        tools.elide.assets.AssetBundle.AssetContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetContent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetContent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tools.elide.assets.AssetBundle.AssetContent.class, tools.elide.assets.AssetBundle.AssetContent.Builder.class);
      }

      // Construct using tools.elide.assets.AssetBundle.AssetContent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVariantFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        module_ = "";

        filename_ = "";

        token_ = "";

        if (variantBuilder_ == null) {
          variant_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variantBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_AssetContent_descriptor;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetContent getDefaultInstanceForType() {
        return tools.elide.assets.AssetBundle.AssetContent.getDefaultInstance();
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetContent build() {
        tools.elide.assets.AssetBundle.AssetContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tools.elide.assets.AssetBundle.AssetContent buildPartial() {
        tools.elide.assets.AssetBundle.AssetContent result = new tools.elide.assets.AssetBundle.AssetContent(this);
        int from_bitField0_ = bitField0_;
        result.module_ = module_;
        result.filename_ = filename_;
        result.token_ = token_;
        if (variantBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            variant_ = java.util.Collections.unmodifiableList(variant_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variant_ = variant_;
        } else {
          result.variant_ = variantBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tools.elide.assets.AssetBundle.AssetContent) {
          return mergeFrom((tools.elide.assets.AssetBundle.AssetContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tools.elide.assets.AssetBundle.AssetContent other) {
        if (other == tools.elide.assets.AssetBundle.AssetContent.getDefaultInstance()) return this;
        if (!other.getModule().isEmpty()) {
          module_ = other.module_;
          onChanged();
        }
        if (!other.getFilename().isEmpty()) {
          filename_ = other.filename_;
          onChanged();
        }
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (variantBuilder_ == null) {
          if (!other.variant_.isEmpty()) {
            if (variant_.isEmpty()) {
              variant_ = other.variant_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariantIsMutable();
              variant_.addAll(other.variant_);
            }
            onChanged();
          }
        } else {
          if (!other.variant_.isEmpty()) {
            if (variantBuilder_.isEmpty()) {
              variantBuilder_.dispose();
              variantBuilder_ = null;
              variant_ = other.variant_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variantBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVariantFieldBuilder() : null;
            } else {
              variantBuilder_.addAllMessages(other.variant_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tools.elide.assets.AssetBundle.AssetContent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tools.elide.assets.AssetBundle.AssetContent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object module_ = "";
      /**
       * <pre>
       * Module which this asset is a member of.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The module.
       */
      public java.lang.String getModule() {
        java.lang.Object ref = module_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          module_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Module which this asset is a member of.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return The bytes for module.
       */
      public com.google.protobuf.ByteString
          getModuleBytes() {
        java.lang.Object ref = module_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          module_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Module which this asset is a member of.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The module to set.
       * @return This builder for chaining.
       */
      public Builder setModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        module_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Module which this asset is a member of.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearModule() {
        
        module_ = getDefaultInstance().getModule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Module which this asset is a member of.
       * </pre>
       *
       * <code>string module = 1;</code>
       * @param value The bytes for module to set.
       * @return This builder for chaining.
       */
      public Builder setModuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        module_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <pre>
       * Original name of the source file.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The filename.
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Original name of the source file.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return The bytes for filename.
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Original name of the source file.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @param value The filename to set.
       * @return This builder for chaining.
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original name of the source file.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilename() {
        
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original name of the source file.
       * </pre>
       *
       * <code>string filename = 2;</code>
       * @param value The bytes for filename to set.
       * @return This builder for chaining.
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filename_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object token_ = "";
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return The token.
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return The bytes for token.
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash token uniquely identifying the content in this module.
       * </pre>
       *
       * <code>string token = 3;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private java.util.List<tools.elide.data.CompressedData> variant_ =
        java.util.Collections.emptyList();
      private void ensureVariantIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          variant_ = new java.util.ArrayList<tools.elide.data.CompressedData>(variant_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder> variantBuilder_;

      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<tools.elide.data.CompressedData> getVariantList() {
        if (variantBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variant_);
        } else {
          return variantBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public int getVariantCount() {
        if (variantBuilder_ == null) {
          return variant_.size();
        } else {
          return variantBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData getVariant(int index) {
        if (variantBuilder_ == null) {
          return variant_.get(index);
        } else {
          return variantBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder setVariant(
          int index, tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.set(index, value);
          onChanged();
        } else {
          variantBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder setVariant(
          int index, tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.add(value);
          onChanged();
        } else {
          variantBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          int index, tools.elide.data.CompressedData value) {
        if (variantBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantIsMutable();
          variant_.add(index, value);
          onChanged();
        } else {
          variantBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.add(builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addVariant(
          int index, tools.elide.data.CompressedData.Builder builderForValue) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder addAllVariant(
          java.lang.Iterable<? extends tools.elide.data.CompressedData> values) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variant_);
          onChanged();
        } else {
          variantBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder clearVariant() {
        if (variantBuilder_ == null) {
          variant_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variantBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public Builder removeVariant(int index) {
        if (variantBuilder_ == null) {
          ensureVariantIsMutable();
          variant_.remove(index);
          onChanged();
        } else {
          variantBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder getVariantBuilder(
          int index) {
        return getVariantFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedDataOrBuilder getVariantOrBuilder(
          int index) {
        if (variantBuilder_ == null) {
          return variant_.get(index);  } else {
          return variantBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<? extends tools.elide.data.CompressedDataOrBuilder> 
           getVariantOrBuilderList() {
        if (variantBuilder_ != null) {
          return variantBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variant_);
        }
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder addVariantBuilder() {
        return getVariantFieldBuilder().addBuilder(
            tools.elide.data.CompressedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public tools.elide.data.CompressedData.Builder addVariantBuilder(
          int index) {
        return getVariantFieldBuilder().addBuilder(
            index, tools.elide.data.CompressedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies each variant of an asset's main content.
       * </pre>
       *
       * <code>repeated .data.CompressedData variant = 4;</code>
       */
      public java.util.List<tools.elide.data.CompressedData.Builder> 
           getVariantBuilderList() {
        return getVariantFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder> 
          getVariantFieldBuilder() {
        if (variantBuilder_ == null) {
          variantBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tools.elide.data.CompressedData, tools.elide.data.CompressedData.Builder, tools.elide.data.CompressedDataOrBuilder>(
                  variant_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          variant_ = null;
        }
        return variantBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:assets.AssetBundle.AssetContent)
    }

    // @@protoc_insertion_point(class_scope:assets.AssetBundle.AssetContent)
    private static final tools.elide.assets.AssetBundle.AssetContent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle.AssetContent();
    }

    public static tools.elide.assets.AssetBundle.AssetContent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AssetContent>
        PARSER = new com.google.protobuf.AbstractParser<AssetContent>() {
      @java.lang.Override
      public AssetContent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AssetContent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AssetContent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AssetContent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle.AssetContent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int VERSION_FIELD_NUMBER = 1;
  private int version_;
  /**
   * <pre>
   * Version of the tool that produced this manifest. This is used by the tool to understand which asset bundle features
   * are supported for a given tool version.
   * </pre>
   *
   * <code>uint32 version = 1;</code>
   * @return The version.
   */
  @java.lang.Override
  public int getVersion() {
    return version_;
  }

  public static final int SETTINGS_FIELD_NUMBER = 2;
  private tools.elide.assets.AssetBundle.BundlerSettings settings_;
  /**
   * <pre>
   * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
   * use of the bundle to serve assets.
   * </pre>
   *
   * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
   * @return Whether the settings field is set.
   */
  @java.lang.Override
  public boolean hasSettings() {
    return settings_ != null;
  }
  /**
   * <pre>
   * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
   * use of the bundle to serve assets.
   * </pre>
   *
   * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
   * @return The settings.
   */
  @java.lang.Override
  public tools.elide.assets.AssetBundle.BundlerSettings getSettings() {
    return settings_ == null ? tools.elide.assets.AssetBundle.BundlerSettings.getDefaultInstance() : settings_;
  }
  /**
   * <pre>
   * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
   * use of the bundle to serve assets.
   * </pre>
   *
   * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
   */
  @java.lang.Override
  public tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder getSettingsOrBuilder() {
    return getSettings();
  }

  public static final int GENERATED_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp generated_;
  /**
   * <pre>
   * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
   * checking for updates to the asset bundle itself.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp generated = 3;</code>
   * @return Whether the generated field is set.
   */
  @java.lang.Override
  public boolean hasGenerated() {
    return generated_ != null;
  }
  /**
   * <pre>
   * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
   * checking for updates to the asset bundle itself.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp generated = 3;</code>
   * @return The generated.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getGenerated() {
    return generated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : generated_;
  }
  /**
   * <pre>
   * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
   * checking for updates to the asset bundle itself.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp generated = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getGeneratedOrBuilder() {
    return getGenerated();
  }

  public static final int DIGEST_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString digest_;
  /**
   * <pre>
   * Raw bytes of a digest matching the algorithm for digests in file names, which represents a unique fingerprint of
   * the full asset bundle.
   * </pre>
   *
   * <code>bytes digest = 4;</code>
   * @return The digest.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getDigest() {
    return digest_;
  }

  public static final int STYLES_FIELD_NUMBER = 5;
  private static final class StylesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>newDefaultInstance(
                tools.elide.assets.Bundle.internal_static_assets_AssetBundle_StylesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                tools.elide.assets.AssetBundle.StyleBundle.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> styles_;
  private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
  internalGetStyles() {
    if (styles_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          StylesDefaultEntryHolder.defaultEntry);
    }
    return styles_;
  }

  public int getStylesCount() {
    return internalGetStyles().getMap().size();
  }
  /**
   * <pre>
   * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
   * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
   */

  @java.lang.Override
  public boolean containsStyles(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetStyles().getMap().containsKey(key);
  }
  /**
   * Use {@link #getStylesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> getStyles() {
    return getStylesMap();
  }
  /**
   * <pre>
   * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
   * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> getStylesMap() {
    return internalGetStyles().getMap();
  }
  /**
   * <pre>
   * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
   * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.StyleBundle getStylesOrDefault(
      java.lang.String key,
      tools.elide.assets.AssetBundle.StyleBundle defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> map =
        internalGetStyles().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
   * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.StyleBundle getStylesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> map =
        internalGetStyles().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int SCRIPTS_FIELD_NUMBER = 6;
  private static final class ScriptsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>newDefaultInstance(
                tools.elide.assets.Bundle.internal_static_assets_AssetBundle_ScriptsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                tools.elide.assets.AssetBundle.ScriptBundle.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> scripts_;
  private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
  internalGetScripts() {
    if (scripts_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ScriptsDefaultEntryHolder.defaultEntry);
    }
    return scripts_;
  }

  public int getScriptsCount() {
    return internalGetScripts().getMap().size();
  }
  /**
   * <pre>
   * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
   * their script sources and settings. Generally, a Closure module name is used for scripts.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
   */

  @java.lang.Override
  public boolean containsScripts(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetScripts().getMap().containsKey(key);
  }
  /**
   * Use {@link #getScriptsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> getScripts() {
    return getScriptsMap();
  }
  /**
   * <pre>
   * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
   * their script sources and settings. Generally, a Closure module name is used for scripts.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> getScriptsMap() {
    return internalGetScripts().getMap();
  }
  /**
   * <pre>
   * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
   * their script sources and settings. Generally, a Closure module name is used for scripts.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.ScriptBundle getScriptsOrDefault(
      java.lang.String key,
      tools.elide.assets.AssetBundle.ScriptBundle defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> map =
        internalGetScripts().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
   * their script sources and settings. Generally, a Closure module name is used for scripts.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.ScriptBundle getScriptsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> map =
        internalGetScripts().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int GENERIC_FIELD_NUMBER = 7;
  private static final class GenericDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>newDefaultInstance(
                tools.elide.assets.Bundle.internal_static_assets_AssetBundle_GenericEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                tools.elide.assets.AssetBundle.GenericBundle.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> generic_;
  private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
  internalGetGeneric() {
    if (generic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          GenericDefaultEntryHolder.defaultEntry);
    }
    return generic_;
  }

  public int getGenericCount() {
    return internalGetGeneric().getMap().size();
  }
  /**
   * <pre>
   * Generic assets which are mapped within this bundle.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
   */

  @java.lang.Override
  public boolean containsGeneric(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetGeneric().getMap().containsKey(key);
  }
  /**
   * Use {@link #getGenericMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> getGeneric() {
    return getGenericMap();
  }
  /**
   * <pre>
   * Generic assets which are mapped within this bundle.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> getGenericMap() {
    return internalGetGeneric().getMap();
  }
  /**
   * <pre>
   * Generic assets which are mapped within this bundle.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.GenericBundle getGenericOrDefault(
      java.lang.String key,
      tools.elide.assets.AssetBundle.GenericBundle defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> map =
        internalGetGeneric().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Generic assets which are mapped within this bundle.
   * </pre>
   *
   * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
   */
  @java.lang.Override

  public tools.elide.assets.AssetBundle.GenericBundle getGenericOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> map =
        internalGetGeneric().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ASSET_FIELD_NUMBER = 8;
  private java.util.List<tools.elide.assets.AssetBundle.AssetContent> asset_;
  /**
   * <pre>
   * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
   * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
   * </pre>
   *
   * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
   */
  @java.lang.Override
  public java.util.List<tools.elide.assets.AssetBundle.AssetContent> getAssetList() {
    return asset_;
  }
  /**
   * <pre>
   * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
   * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
   * </pre>
   *
   * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends tools.elide.assets.AssetBundle.AssetContentOrBuilder> 
      getAssetOrBuilderList() {
    return asset_;
  }
  /**
   * <pre>
   * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
   * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
   * </pre>
   *
   * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
   */
  @java.lang.Override
  public int getAssetCount() {
    return asset_.size();
  }
  /**
   * <pre>
   * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
   * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
   * </pre>
   *
   * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
   */
  @java.lang.Override
  public tools.elide.assets.AssetBundle.AssetContent getAsset(int index) {
    return asset_.get(index);
  }
  /**
   * <pre>
   * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
   * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
   * </pre>
   *
   * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
   */
  @java.lang.Override
  public tools.elide.assets.AssetBundle.AssetContentOrBuilder getAssetOrBuilder(
      int index) {
    return asset_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (version_ != 0) {
      output.writeUInt32(1, version_);
    }
    if (settings_ != null) {
      output.writeMessage(2, getSettings());
    }
    if (generated_ != null) {
      output.writeMessage(3, getGenerated());
    }
    if (!digest_.isEmpty()) {
      output.writeBytes(4, digest_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetStyles(),
        StylesDefaultEntryHolder.defaultEntry,
        5);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetScripts(),
        ScriptsDefaultEntryHolder.defaultEntry,
        6);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetGeneric(),
        GenericDefaultEntryHolder.defaultEntry,
        7);
    for (int i = 0; i < asset_.size(); i++) {
      output.writeMessage(8, asset_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, version_);
    }
    if (settings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSettings());
    }
    if (generated_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getGenerated());
    }
    if (!digest_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, digest_);
    }
    for (java.util.Map.Entry<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> entry
         : internalGetStyles().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
      styles__ = StylesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, styles__);
    }
    for (java.util.Map.Entry<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> entry
         : internalGetScripts().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
      scripts__ = ScriptsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, scripts__);
    }
    for (java.util.Map.Entry<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> entry
         : internalGetGeneric().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
      generic__ = GenericDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, generic__);
    }
    for (int i = 0; i < asset_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, asset_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof tools.elide.assets.AssetBundle)) {
      return super.equals(obj);
    }
    tools.elide.assets.AssetBundle other = (tools.elide.assets.AssetBundle) obj;

    if (getVersion()
        != other.getVersion()) return false;
    if (hasSettings() != other.hasSettings()) return false;
    if (hasSettings()) {
      if (!getSettings()
          .equals(other.getSettings())) return false;
    }
    if (hasGenerated() != other.hasGenerated()) return false;
    if (hasGenerated()) {
      if (!getGenerated()
          .equals(other.getGenerated())) return false;
    }
    if (!getDigest()
        .equals(other.getDigest())) return false;
    if (!internalGetStyles().equals(
        other.internalGetStyles())) return false;
    if (!internalGetScripts().equals(
        other.internalGetScripts())) return false;
    if (!internalGetGeneric().equals(
        other.internalGetGeneric())) return false;
    if (!getAssetList()
        .equals(other.getAssetList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    if (hasSettings()) {
      hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getSettings().hashCode();
    }
    if (hasGenerated()) {
      hash = (37 * hash) + GENERATED_FIELD_NUMBER;
      hash = (53 * hash) + getGenerated().hashCode();
    }
    hash = (37 * hash) + DIGEST_FIELD_NUMBER;
    hash = (53 * hash) + getDigest().hashCode();
    if (!internalGetStyles().getMap().isEmpty()) {
      hash = (37 * hash) + STYLES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetStyles().hashCode();
    }
    if (!internalGetScripts().getMap().isEmpty()) {
      hash = (37 * hash) + SCRIPTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetScripts().hashCode();
    }
    if (!internalGetGeneric().getMap().isEmpty()) {
      hash = (37 * hash) + GENERIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetGeneric().hashCode();
    }
    if (getAssetCount() > 0) {
      hash = (37 * hash) + ASSET_FIELD_NUMBER;
      hash = (53 * hash) + getAssetList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static tools.elide.assets.AssetBundle parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tools.elide.assets.AssetBundle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static tools.elide.assets.AssetBundle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static tools.elide.assets.AssetBundle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static tools.elide.assets.AssetBundle parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static tools.elide.assets.AssetBundle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(tools.elide.assets.AssetBundle prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines the structure of an "asset bundle," which keeps track of frontend assets for an application. This manifest is
   * generally consumed in binary-proto form by the backend systems running the app, so it can load frontend code and map
   * module paths to annotations affixed to controllers.
   * Assets enclosed in the asset manifest are referenced by their "module name," which is a dotted string path uniquely
   * scoping a given stylesheet or script. The set of sources associated with the module name are loaded in order, with
   * any applicable rewrite maps or other settings applying during output.
   * </pre>
   *
   * Protobuf type {@code assets.AssetBundle}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:assets.AssetBundle)
      tools.elide.assets.AssetBundleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetStyles();
        case 6:
          return internalGetScripts();
        case 7:
          return internalGetGeneric();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableStyles();
        case 6:
          return internalGetMutableScripts();
        case 7:
          return internalGetMutableGeneric();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tools.elide.assets.AssetBundle.class, tools.elide.assets.AssetBundle.Builder.class);
    }

    // Construct using tools.elide.assets.AssetBundle.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAssetFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      version_ = 0;

      if (settingsBuilder_ == null) {
        settings_ = null;
      } else {
        settings_ = null;
        settingsBuilder_ = null;
      }
      if (generatedBuilder_ == null) {
        generated_ = null;
      } else {
        generated_ = null;
        generatedBuilder_ = null;
      }
      digest_ = com.google.protobuf.ByteString.EMPTY;

      internalGetMutableStyles().clear();
      internalGetMutableScripts().clear();
      internalGetMutableGeneric().clear();
      if (assetBuilder_ == null) {
        asset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        assetBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return tools.elide.assets.Bundle.internal_static_assets_AssetBundle_descriptor;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle getDefaultInstanceForType() {
      return tools.elide.assets.AssetBundle.getDefaultInstance();
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle build() {
      tools.elide.assets.AssetBundle result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public tools.elide.assets.AssetBundle buildPartial() {
      tools.elide.assets.AssetBundle result = new tools.elide.assets.AssetBundle(this);
      int from_bitField0_ = bitField0_;
      result.version_ = version_;
      if (settingsBuilder_ == null) {
        result.settings_ = settings_;
      } else {
        result.settings_ = settingsBuilder_.build();
      }
      if (generatedBuilder_ == null) {
        result.generated_ = generated_;
      } else {
        result.generated_ = generatedBuilder_.build();
      }
      result.digest_ = digest_;
      result.styles_ = internalGetStyles();
      result.styles_.makeImmutable();
      result.scripts_ = internalGetScripts();
      result.scripts_.makeImmutable();
      result.generic_ = internalGetGeneric();
      result.generic_.makeImmutable();
      if (assetBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          asset_ = java.util.Collections.unmodifiableList(asset_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.asset_ = asset_;
      } else {
        result.asset_ = assetBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof tools.elide.assets.AssetBundle) {
        return mergeFrom((tools.elide.assets.AssetBundle)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(tools.elide.assets.AssetBundle other) {
      if (other == tools.elide.assets.AssetBundle.getDefaultInstance()) return this;
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.hasSettings()) {
        mergeSettings(other.getSettings());
      }
      if (other.hasGenerated()) {
        mergeGenerated(other.getGenerated());
      }
      if (other.getDigest() != com.google.protobuf.ByteString.EMPTY) {
        setDigest(other.getDigest());
      }
      internalGetMutableStyles().mergeFrom(
          other.internalGetStyles());
      internalGetMutableScripts().mergeFrom(
          other.internalGetScripts());
      internalGetMutableGeneric().mergeFrom(
          other.internalGetGeneric());
      if (assetBuilder_ == null) {
        if (!other.asset_.isEmpty()) {
          if (asset_.isEmpty()) {
            asset_ = other.asset_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAssetIsMutable();
            asset_.addAll(other.asset_);
          }
          onChanged();
        }
      } else {
        if (!other.asset_.isEmpty()) {
          if (assetBuilder_.isEmpty()) {
            assetBuilder_.dispose();
            assetBuilder_ = null;
            asset_ = other.asset_;
            bitField0_ = (bitField0_ & ~0x00000008);
            assetBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAssetFieldBuilder() : null;
          } else {
            assetBuilder_.addAllMessages(other.asset_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      tools.elide.assets.AssetBundle parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (tools.elide.assets.AssetBundle) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int version_ ;
    /**
     * <pre>
     * Version of the tool that produced this manifest. This is used by the tool to understand which asset bundle features
     * are supported for a given tool version.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Version of the tool that produced this manifest. This is used by the tool to understand which asset bundle features
     * are supported for a given tool version.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(int value) {
      
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of the tool that produced this manifest. This is used by the tool to understand which asset bundle features
     * are supported for a given tool version.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      
      version_ = 0;
      onChanged();
      return this;
    }

    private tools.elide.assets.AssetBundle.BundlerSettings settings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        tools.elide.assets.AssetBundle.BundlerSettings, tools.elide.assets.AssetBundle.BundlerSettings.Builder, tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder> settingsBuilder_;
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     * @return Whether the settings field is set.
     */
    public boolean hasSettings() {
      return settingsBuilder_ != null || settings_ != null;
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     * @return The settings.
     */
    public tools.elide.assets.AssetBundle.BundlerSettings getSettings() {
      if (settingsBuilder_ == null) {
        return settings_ == null ? tools.elide.assets.AssetBundle.BundlerSettings.getDefaultInstance() : settings_;
      } else {
        return settingsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public Builder setSettings(tools.elide.assets.AssetBundle.BundlerSettings value) {
      if (settingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        settings_ = value;
        onChanged();
      } else {
        settingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public Builder setSettings(
        tools.elide.assets.AssetBundle.BundlerSettings.Builder builderForValue) {
      if (settingsBuilder_ == null) {
        settings_ = builderForValue.build();
        onChanged();
      } else {
        settingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public Builder mergeSettings(tools.elide.assets.AssetBundle.BundlerSettings value) {
      if (settingsBuilder_ == null) {
        if (settings_ != null) {
          settings_ =
            tools.elide.assets.AssetBundle.BundlerSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
        } else {
          settings_ = value;
        }
        onChanged();
      } else {
        settingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public Builder clearSettings() {
      if (settingsBuilder_ == null) {
        settings_ = null;
        onChanged();
      } else {
        settings_ = null;
        settingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public tools.elide.assets.AssetBundle.BundlerSettings.Builder getSettingsBuilder() {
      
      onChanged();
      return getSettingsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    public tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder getSettingsOrBuilder() {
      if (settingsBuilder_ != null) {
        return settingsBuilder_.getMessageOrBuilder();
      } else {
        return settings_ == null ?
            tools.elide.assets.AssetBundle.BundlerSettings.getDefaultInstance() : settings_;
      }
    }
    /**
     * <pre>
     * Bundler settings that were active at the time the bundle was assembled, and some of which may extend to the runtime
     * use of the bundle to serve assets.
     * </pre>
     *
     * <code>.assets.AssetBundle.BundlerSettings settings = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        tools.elide.assets.AssetBundle.BundlerSettings, tools.elide.assets.AssetBundle.BundlerSettings.Builder, tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder> 
        getSettingsFieldBuilder() {
      if (settingsBuilder_ == null) {
        settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            tools.elide.assets.AssetBundle.BundlerSettings, tools.elide.assets.AssetBundle.BundlerSettings.Builder, tools.elide.assets.AssetBundle.BundlerSettingsOrBuilder>(
                getSettings(),
                getParentForChildren(),
                isClean());
        settings_ = null;
      }
      return settingsBuilder_;
    }

    private com.google.protobuf.Timestamp generated_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> generatedBuilder_;
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     * @return Whether the generated field is set.
     */
    public boolean hasGenerated() {
      return generatedBuilder_ != null || generated_ != null;
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     * @return The generated.
     */
    public com.google.protobuf.Timestamp getGenerated() {
      if (generatedBuilder_ == null) {
        return generated_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : generated_;
      } else {
        return generatedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public Builder setGenerated(com.google.protobuf.Timestamp value) {
      if (generatedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        generated_ = value;
        onChanged();
      } else {
        generatedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public Builder setGenerated(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (generatedBuilder_ == null) {
        generated_ = builderForValue.build();
        onChanged();
      } else {
        generatedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public Builder mergeGenerated(com.google.protobuf.Timestamp value) {
      if (generatedBuilder_ == null) {
        if (generated_ != null) {
          generated_ =
            com.google.protobuf.Timestamp.newBuilder(generated_).mergeFrom(value).buildPartial();
        } else {
          generated_ = value;
        }
        onChanged();
      } else {
        generatedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public Builder clearGenerated() {
      if (generatedBuilder_ == null) {
        generated_ = null;
        onChanged();
      } else {
        generated_ = null;
        generatedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public com.google.protobuf.Timestamp.Builder getGeneratedBuilder() {
      
      onChanged();
      return getGeneratedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getGeneratedOrBuilder() {
      if (generatedBuilder_ != null) {
        return generatedBuilder_.getMessageOrBuilder();
      } else {
        return generated_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : generated_;
      }
    }
    /**
     * <pre>
     * Timestamp indicating when this asset manifest was generated. This may be used when calculating `ETags` or when
     * checking for updates to the asset bundle itself.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp generated = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getGeneratedFieldBuilder() {
      if (generatedBuilder_ == null) {
        generatedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getGenerated(),
                getParentForChildren(),
                isClean());
        generated_ = null;
      }
      return generatedBuilder_;
    }

    private com.google.protobuf.ByteString digest_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Raw bytes of a digest matching the algorithm for digests in file names, which represents a unique fingerprint of
     * the full asset bundle.
     * </pre>
     *
     * <code>bytes digest = 4;</code>
     * @return The digest.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDigest() {
      return digest_;
    }
    /**
     * <pre>
     * Raw bytes of a digest matching the algorithm for digests in file names, which represents a unique fingerprint of
     * the full asset bundle.
     * </pre>
     *
     * <code>bytes digest = 4;</code>
     * @param value The digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigest(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      digest_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Raw bytes of a digest matching the algorithm for digests in file names, which represents a unique fingerprint of
     * the full asset bundle.
     * </pre>
     *
     * <code>bytes digest = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDigest() {
      
      digest_ = getDefaultInstance().getDigest();
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> styles_;
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
    internalGetStyles() {
      if (styles_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StylesDefaultEntryHolder.defaultEntry);
      }
      return styles_;
    }
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
    internalGetMutableStyles() {
      onChanged();;
      if (styles_ == null) {
        styles_ = com.google.protobuf.MapField.newMapField(
            StylesDefaultEntryHolder.defaultEntry);
      }
      if (!styles_.isMutable()) {
        styles_ = styles_.copy();
      }
      return styles_;
    }

    public int getStylesCount() {
      return internalGetStyles().getMap().size();
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */

    @java.lang.Override
    public boolean containsStyles(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStyles().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStylesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> getStyles() {
      return getStylesMap();
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> getStylesMap() {
      return internalGetStyles().getMap();
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.StyleBundle getStylesOrDefault(
        java.lang.String key,
        tools.elide.assets.AssetBundle.StyleBundle defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> map =
          internalGetStyles().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.StyleBundle getStylesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> map =
          internalGetStyles().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearStyles() {
      internalGetMutableStyles().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */

    public Builder removeStyles(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableStyles().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle>
    getMutableStyles() {
      return internalGetMutableStyles().getMutableMap();
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */
    public Builder putStyles(
        java.lang.String key,
        tools.elide.assets.AssetBundle.StyleBundle value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableStyles().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Set of styles listed in this asset manifest. Like scripts, this is a map of dotted-path module names mapped to
     * their stylesheet sources and settings. Generally, the GSS module name is used for stylesheets.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.StyleBundle&gt; styles = 5;</code>
     */

    public Builder putAllStyles(
        java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.StyleBundle> values) {
      internalGetMutableStyles().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> scripts_;
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
    internalGetScripts() {
      if (scripts_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScriptsDefaultEntryHolder.defaultEntry);
      }
      return scripts_;
    }
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
    internalGetMutableScripts() {
      onChanged();;
      if (scripts_ == null) {
        scripts_ = com.google.protobuf.MapField.newMapField(
            ScriptsDefaultEntryHolder.defaultEntry);
      }
      if (!scripts_.isMutable()) {
        scripts_ = scripts_.copy();
      }
      return scripts_;
    }

    public int getScriptsCount() {
      return internalGetScripts().getMap().size();
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */

    @java.lang.Override
    public boolean containsScripts(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetScripts().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> getScripts() {
      return getScriptsMap();
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> getScriptsMap() {
      return internalGetScripts().getMap();
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.ScriptBundle getScriptsOrDefault(
        java.lang.String key,
        tools.elide.assets.AssetBundle.ScriptBundle defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> map =
          internalGetScripts().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.ScriptBundle getScriptsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> map =
          internalGetScripts().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearScripts() {
      internalGetMutableScripts().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */

    public Builder removeScripts(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableScripts().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle>
    getMutableScripts() {
      return internalGetMutableScripts().getMutableMap();
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */
    public Builder putScripts(
        java.lang.String key,
        tools.elide.assets.AssetBundle.ScriptBundle value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableScripts().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Set of scripts listed in this asset manifest. Like styles, this is a map of dotted-path module names mapped to
     * their script sources and settings. Generally, a Closure module name is used for scripts.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.ScriptBundle&gt; scripts = 6;</code>
     */

    public Builder putAllScripts(
        java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.ScriptBundle> values) {
      internalGetMutableScripts().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> generic_;
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
    internalGetGeneric() {
      if (generic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GenericDefaultEntryHolder.defaultEntry);
      }
      return generic_;
    }
    private com.google.protobuf.MapField<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
    internalGetMutableGeneric() {
      onChanged();;
      if (generic_ == null) {
        generic_ = com.google.protobuf.MapField.newMapField(
            GenericDefaultEntryHolder.defaultEntry);
      }
      if (!generic_.isMutable()) {
        generic_ = generic_.copy();
      }
      return generic_;
    }

    public int getGenericCount() {
      return internalGetGeneric().getMap().size();
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */

    @java.lang.Override
    public boolean containsGeneric(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetGeneric().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGenericMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> getGeneric() {
      return getGenericMap();
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> getGenericMap() {
      return internalGetGeneric().getMap();
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.GenericBundle getGenericOrDefault(
        java.lang.String key,
        tools.elide.assets.AssetBundle.GenericBundle defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> map =
          internalGetGeneric().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */
    @java.lang.Override

    public tools.elide.assets.AssetBundle.GenericBundle getGenericOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> map =
          internalGetGeneric().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearGeneric() {
      internalGetMutableGeneric().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */

    public Builder removeGeneric(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableGeneric().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle>
    getMutableGeneric() {
      return internalGetMutableGeneric().getMutableMap();
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */
    public Builder putGeneric(
        java.lang.String key,
        tools.elide.assets.AssetBundle.GenericBundle value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableGeneric().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Generic assets which are mapped within this bundle.
     * </pre>
     *
     * <code>map&lt;string, .assets.AssetBundle.GenericBundle&gt; generic = 7;</code>
     */

    public Builder putAllGeneric(
        java.util.Map<java.lang.String, tools.elide.assets.AssetBundle.GenericBundle> values) {
      internalGetMutableGeneric().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<tools.elide.assets.AssetBundle.AssetContent> asset_ =
      java.util.Collections.emptyList();
    private void ensureAssetIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        asset_ = new java.util.ArrayList<tools.elide.assets.AssetBundle.AssetContent>(asset_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        tools.elide.assets.AssetBundle.AssetContent, tools.elide.assets.AssetBundle.AssetContent.Builder, tools.elide.assets.AssetBundle.AssetContentOrBuilder> assetBuilder_;

    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public java.util.List<tools.elide.assets.AssetBundle.AssetContent> getAssetList() {
      if (assetBuilder_ == null) {
        return java.util.Collections.unmodifiableList(asset_);
      } else {
        return assetBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public int getAssetCount() {
      if (assetBuilder_ == null) {
        return asset_.size();
      } else {
        return assetBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public tools.elide.assets.AssetBundle.AssetContent getAsset(int index) {
      if (assetBuilder_ == null) {
        return asset_.get(index);
      } else {
        return assetBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder setAsset(
        int index, tools.elide.assets.AssetBundle.AssetContent value) {
      if (assetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAssetIsMutable();
        asset_.set(index, value);
        onChanged();
      } else {
        assetBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder setAsset(
        int index, tools.elide.assets.AssetBundle.AssetContent.Builder builderForValue) {
      if (assetBuilder_ == null) {
        ensureAssetIsMutable();
        asset_.set(index, builderForValue.build());
        onChanged();
      } else {
        assetBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder addAsset(tools.elide.assets.AssetBundle.AssetContent value) {
      if (assetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAssetIsMutable();
        asset_.add(value);
        onChanged();
      } else {
        assetBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder addAsset(
        int index, tools.elide.assets.AssetBundle.AssetContent value) {
      if (assetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAssetIsMutable();
        asset_.add(index, value);
        onChanged();
      } else {
        assetBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder addAsset(
        tools.elide.assets.AssetBundle.AssetContent.Builder builderForValue) {
      if (assetBuilder_ == null) {
        ensureAssetIsMutable();
        asset_.add(builderForValue.build());
        onChanged();
      } else {
        assetBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder addAsset(
        int index, tools.elide.assets.AssetBundle.AssetContent.Builder builderForValue) {
      if (assetBuilder_ == null) {
        ensureAssetIsMutable();
        asset_.add(index, builderForValue.build());
        onChanged();
      } else {
        assetBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder addAllAsset(
        java.lang.Iterable<? extends tools.elide.assets.AssetBundle.AssetContent> values) {
      if (assetBuilder_ == null) {
        ensureAssetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, asset_);
        onChanged();
      } else {
        assetBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder clearAsset() {
      if (assetBuilder_ == null) {
        asset_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        assetBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public Builder removeAsset(int index) {
      if (assetBuilder_ == null) {
        ensureAssetIsMutable();
        asset_.remove(index);
        onChanged();
      } else {
        assetBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public tools.elide.assets.AssetBundle.AssetContent.Builder getAssetBuilder(
        int index) {
      return getAssetFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public tools.elide.assets.AssetBundle.AssetContentOrBuilder getAssetOrBuilder(
        int index) {
      if (assetBuilder_ == null) {
        return asset_.get(index);  } else {
        return assetBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public java.util.List<? extends tools.elide.assets.AssetBundle.AssetContentOrBuilder> 
         getAssetOrBuilderList() {
      if (assetBuilder_ != null) {
        return assetBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(asset_);
      }
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public tools.elide.assets.AssetBundle.AssetContent.Builder addAssetBuilder() {
      return getAssetFieldBuilder().addBuilder(
          tools.elide.assets.AssetBundle.AssetContent.getDefaultInstance());
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public tools.elide.assets.AssetBundle.AssetContent.Builder addAssetBuilder(
        int index) {
      return getAssetFieldBuilder().addBuilder(
          index, tools.elide.assets.AssetBundle.AssetContent.getDefaultInstance());
    }
    /**
     * <pre>
     * Inlined asset contents, which specify pre-compressed asset data corresponding to a given CSS or JavaScript code
     * bundle. The server may choose to serve this content rather than performing compression on-the-fly.
     * </pre>
     *
     * <code>repeated .assets.AssetBundle.AssetContent asset = 8;</code>
     */
    public java.util.List<tools.elide.assets.AssetBundle.AssetContent.Builder> 
         getAssetBuilderList() {
      return getAssetFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        tools.elide.assets.AssetBundle.AssetContent, tools.elide.assets.AssetBundle.AssetContent.Builder, tools.elide.assets.AssetBundle.AssetContentOrBuilder> 
        getAssetFieldBuilder() {
      if (assetBuilder_ == null) {
        assetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            tools.elide.assets.AssetBundle.AssetContent, tools.elide.assets.AssetBundle.AssetContent.Builder, tools.elide.assets.AssetBundle.AssetContentOrBuilder>(
                asset_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        asset_ = null;
      }
      return assetBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:assets.AssetBundle)
  }

  // @@protoc_insertion_point(class_scope:assets.AssetBundle)
  private static final tools.elide.assets.AssetBundle DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new tools.elide.assets.AssetBundle();
  }

  public static tools.elide.assets.AssetBundle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AssetBundle>
      PARSER = new com.google.protobuf.AbstractParser<AssetBundle>() {
    @java.lang.Override
    public AssetBundle parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AssetBundle(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AssetBundle> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AssetBundle> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public tools.elide.assets.AssetBundle getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

