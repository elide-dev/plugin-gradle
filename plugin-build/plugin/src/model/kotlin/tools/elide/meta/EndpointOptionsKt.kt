//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: elide/meta/app.proto

package tools.elide.meta;

@kotlin.jvm.JvmName("-initializeendpointOptions")
inline fun endpointOptions(block: tools.elide.meta.EndpointOptionsKt.Dsl.() -> kotlin.Unit): tools.elide.meta.EndpointOptions =
  tools.elide.meta.EndpointOptionsKt.Dsl._create(tools.elide.meta.EndpointOptions.newBuilder()).apply { block() }._build()
object EndpointOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: tools.elide.meta.EndpointOptions.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tools.elide.meta.EndpointOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tools.elide.meta.EndpointOptions = _builder.build()

    /**
     * <pre>
     * Whether this endpoint requires stateful considerations.
     * </pre>
     *
     * <code>bool stateful = 1;</code>
     */
    var stateful: kotlin.Boolean
      @JvmName("getStateful")
      get() = _builder.getStateful()
      @JvmName("setStateful")
      set(value) {
        _builder.setStateful(value)
      }
    /**
     * <pre>
     * Whether this endpoint requires stateful considerations.
     * </pre>
     *
     * <code>bool stateful = 1;</code>
     */
    fun clearStateful() {
      _builder.clearStateful()
    }

    /**
     * <pre>
     * Whether this endpoint can be pre-compiled in an SSG context.
     * </pre>
     *
     * <code>bool precompilable = 2;</code>
     */
    var precompilable: kotlin.Boolean
      @JvmName("getPrecompilable")
      get() = _builder.getPrecompilable()
      @JvmName("setPrecompilable")
      set(value) {
        _builder.setPrecompilable(value)
      }
    /**
     * <pre>
     * Whether this endpoint can be pre-compiled in an SSG context.
     * </pre>
     *
     * <code>bool precompilable = 2;</code>
     */
    fun clearPrecompilable() {
      _builder.clearPrecompilable()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tools.elide.meta.EndpointOptions.copy(block: tools.elide.meta.EndpointOptionsKt.Dsl.() -> kotlin.Unit): tools.elide.meta.EndpointOptions =
  tools.elide.meta.EndpointOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

