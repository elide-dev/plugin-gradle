//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: elide/model/model.proto

package tools.elide.model;

@kotlin.jvm.JvmName("-initializetableOptions")
inline fun tableOptions(block: tools.elide.model.TableOptionsKt.Dsl.() -> kotlin.Unit): tools.elide.model.TableOptions =
  tools.elide.model.TableOptionsKt.Dsl._create(tools.elide.model.TableOptions.newBuilder()).apply { block() }._build()
object TableOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: tools.elide.model.TableOptions.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tools.elide.model.TableOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tools.elide.model.TableOptions = _builder.build()

    /**
     * <pre>
     * Name of the table bound to this model.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * Name of the table bound to this model.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * Description for the table bound to this model.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <pre>
     * Description for the table bound to this model.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    fun clearDescription() {
      _builder.clearDescription()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun tools.elide.model.TableOptions.copy(block: tools.elide.model.TableOptionsKt.Dsl.() -> kotlin.Unit): tools.elide.model.TableOptions =
  tools.elide.model.TableOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

